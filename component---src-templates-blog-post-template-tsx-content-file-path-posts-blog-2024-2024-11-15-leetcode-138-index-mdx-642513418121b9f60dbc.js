"use strict";(self.webpackChunkportfolio_app=self.webpackChunkportfolio_app||[]).push([[6172],{56:function(e,n,t){t.r(n),t.d(n,{BlogPost:function(){return p},default:function(){return f}});var r=t(8453),a=t(6540);function l(e){const n=Object.assign({p:"p",h1:"h1",pre:"pre",code:"code"},(0,r.R)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"This problem was tricky as I had to track Node references rather than the index given in the input."),"\n",a.createElement(n.h1,null,"Solution"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-python"},"from collections import defaultdict\r\n\"\"\"\r\n# Definition for a Node.\r\nclass Node:\r\n    def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None):\r\n        self.val = int(x)\r\n        self.next = next\r\n        self.random = random\r\n\"\"\"\r\n\r\nclass Solution:\r\n    def copyRandomList(self, head: 'Optional[Node]') -> 'Optional[Node]':\r\n        start = Node(head.val) if head else None\r\n        node = start\r\n        randoms = defaultdict(list)\r\n        nodes = {}\r\n        while head:\r\n            nodes[head] = node\r\n            node.next = Node(head.next.val) if head.next else None\r\n            node.val = head.val\r\n            if head.random:\r\n                randoms[head.random].append(head)\r\n            head = head.next\r\n            node = node.next\r\n        \r\n        for val in randoms.keys():\r\n            for neighbor in randoms[val]:\r\n                nodes[neighbor].random = nodes[val]\r\n\r\n        return start\n")),"\n",a.createElement(n.p,null,"O(n) = n since worst case is 2n due to the while loop, then at most visiting each node again when assigning the randoms' value."))}var o=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.R)(),e.components);return n?a.createElement(n,e,a.createElement(l,e)):l(e)},d=t(4810),s=t(4399),i=t(3614),c=t(1510),m=t(6409),u=t(572);const p=c.default.div.withConfig({displayName:"blogPostTemplate__BlogPost",componentId:"sc-6bdelx-0"})(["margin:0 auto;margin-top:6em;max-width:800px;padding:20px;"]);function h(e){let{data:n,pageContext:t,children:r}=e;const{frontmatter:l}=n.mdx,{previous:o,next:h,post:f}=t;return a.createElement(s.A,null,a.createElement(c.ThemeProvider,{theme:i.w4},a.createElement(i.nB,null,a.createElement(m.A,null),a.createElement(p,null,a.createElement(i.DZ,{className:"text-center"},l.title),a.createElement("p",{className:"text-center"},f.frontmatter.date),r,o&&a.createElement(a.Fragment,null,o&&a.createElement(d.N_,{to:o.fields.slug},a.createElement("p",null,o.frontmatter.title))),h&&a.createElement(a.Fragment,null,h&&a.createElement(d.N_,{to:h.fields.slug},a.createElement("p",null,h.frontmatter.title)))),a.createElement(u.A,null))))}function f(e){return a.createElement(h,e,a.createElement(o,e))}}}]);
//# sourceMappingURL=component---src-templates-blog-post-template-tsx-content-file-path-posts-blog-2024-2024-11-15-leetcode-138-index-mdx-642513418121b9f60dbc.js.map