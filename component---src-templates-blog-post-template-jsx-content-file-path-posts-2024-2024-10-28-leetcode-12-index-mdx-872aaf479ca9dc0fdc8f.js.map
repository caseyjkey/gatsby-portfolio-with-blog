{"version":3,"file":"component---src-templates-blog-post-template-jsx-content-file-path-posts-2024-2024-10-28-leetcode-12-index-mdx-872aaf479ca9dc0fdc8f.js","mappings":"uNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,GAAI,OACHC,EAAAA,EAAAA,KAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,qOAAsO,KAAMO,EAAAA,cAAoBV,EAAYI,GAAI,KAAM,YAAa,KAAMM,EAAAA,cAAoBV,EAAYK,IAAK,KAAMK,EAAAA,cAAoBV,EAAYM,KAAM,KAAM,g9CAA6+C,KAAMI,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,YAAa,KAAMO,EAAAA,cAAoBV,EAAYO,GAAI,KAAM,cAAe,KAAMG,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,8IAA+IO,EAAAA,cAAoBV,EAAYM,KAAM,KAAM,cAAe,0JAC7zE,CAKA,MAJA,SAAoBP,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,KAAsBT,EAAMU,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWb,EAAOW,EAAAA,cAAoBZ,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oECNO,MAAMc,EAAYC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAVJ,CAAU,gEAMnC,SAASK,EAAgBC,GAAgC,IAA/B,KAACC,EAAI,YAAEC,EAAW,SAAEC,GAASH,EACrD,MAAM,YAACI,GAAeH,EAAKI,KACrB,SAACC,EAAQ,KAAEC,EAAI,KAAEC,GAAQN,EAC/B,OAAOZ,EAAAA,cAAoBmB,EAAAA,EAAQ,KAAMnB,EAAAA,cAAoBoB,EAAAA,cAAe,CAC1EC,MAAOA,EAAAA,IACNrB,EAAAA,cAAoBsB,EAAAA,GAAM,KAAMtB,EAAAA,cAAoBuB,EAAAA,GAAavB,EAAAA,cAAoBG,EAAU,KAAMH,EAAAA,cAAoBwB,EAAAA,GAAS,CACnIC,UAAW,eACVX,EAAYY,OAAQ1B,EAAAA,cAAoB,IAAK,CAC9CyB,UAAW,eACVP,EAAKJ,YAAYa,MAAOd,EAAUG,GAAYhB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMgB,GAAYhB,EAAAA,cAAoB4B,EAAAA,GAAM,CAC/HC,GAAIb,EAASc,OAAOC,MACnB/B,EAAAA,cAAoB,IAAK,KAAMgB,EAASF,YAAYY,SAAUT,GAAQjB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMiB,GAAQjB,EAAAA,cAAoB4B,EAAAA,GAAM,CACnJC,GAAIZ,EAAKa,OAAOC,MACf/B,EAAAA,cAAoB,IAAK,KAAMiB,EAAKH,YAAYY,UAAW1B,EAAAA,cAAoBgC,EAAAA,KACpF,CACe,SAASC,EAAiB5C,GACvC,OAAOW,EAAAA,cAAoBS,EAAkBpB,EAAOW,EAAAA,cAAoBkC,EAAqB7C,GAC/F,C","sources":["webpack://portfolio-app/./posts/2024/2024-10-28-leetcode-12/index.mdx","webpack://portfolio-app/./src/templates/blogPostTemplate.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"I started feeling down about my past interview performance. Rather than continue ruminating, I decided to continue my\\nLeetCode grind tonight. My goal is to complete the Top 150 Interview Questions before the end of the year.\"), \"\\n\", React.createElement(_components.h1, null, \"Solution\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"class Solution:\\n    def intToRoman(self, num: int) -> str:\\n        digitCount = int((math.log10(num) + 1) // 1)\\n        def getLeftmostDigit():\\n            return num // (10 ** (digitCount - 1)) % 10\\n        romanForm = \\\"\\\"\\n        if digitCount == 4:\\n            digit = getLeftmostDigit()\\n            for i in range(digit): romanForm += \\\"M\\\" \\n            digitCount -= 1\\n        if digitCount == 3:\\n            digit = getLeftmostDigit()\\n            if digit in [4, 9]:\\n                romanForm += \\\"CD\\\" if digit == 4 else \\\"CM\\\"\\n                digit -= digit\\n            elif digit >= 5:\\n                romanForm += \\\"D\\\"\\n                digit -= 5\\n            for i in range(digit): romanForm += \\\"C\\\" \\n            digitCount -= 1\\n        if digitCount == 2:\\n            digit = getLeftmostDigit()\\n            if digit in [4, 9]:\\n                romanForm += \\\"XL\\\" if digit == 4 else \\\"XC\\\"\\n                digit -= digit\\n            elif digit >= 5:\\n                romanForm += \\\"L\\\"\\n                digit -= 5\\n            for i in range(digit): romanForm += \\\"X\\\"\\n            digitCount -= 1\\n        if digitCount == 1:\\n            digit = getLeftmostDigit()\\n            if digit in [4, 9]:\\n                romanForm += \\\"IV\\\" if digit == 4 else \\\"IX\\\"\\n                digit -= digit\\n            elif digit >= 5:\\n                romanForm += \\\"V\\\"\\n                digit -= 5\\n            for i in range(digit): romanForm += \\\"I\\\" \\n\\n        return romanForm\\n\")), \"\\n\", React.createElement(_components.p, null, \"O(n) = 1\"), \"\\n\", React.createElement(_components.h2, null, \"Reflection\"), \"\\n\", React.createElement(_components.p, null, \"Next time, I would like to reduce the code complexity by abstracting the strings into a dictionary.\\nWith the dictionary, I could loop for \", React.createElement(_components.code, null, \"digitCount\"), \" iterations and select the appropriate value from the dictionary.\\nThis would remove the repeated code, thereby making it easier to read and maintain.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/trill/Development/gatsby-portfolio-with-blog/posts/2024/2024-10-28-leetcode-12/index.mdx\";\nimport {graphql, Link} from 'gatsby';\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport {Heading} from '../components/style.js';\nimport Dump from '../components/Dump';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {theme, Body} from '../components/style';\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\nexport const BlogPost = (styled.div)`\n    margin: 0 auto;\n    margin-top: 6em;\n    max-width: 800px;\n    padding: 20px;\n`;\nfunction BlogPostTemplate({data, pageContext, children}) {\n  const {frontmatter} = data.mdx;\n  const {previous, next, post} = pageContext;\n  return React.createElement(Layout, null, React.createElement(ThemeProvider, {\n    theme: theme\n  }, React.createElement(Body, null, React.createElement(Navigation), React.createElement(BlogPost, null, React.createElement(Heading, {\n    className: \"text-center\"\n  }, frontmatter.title), React.createElement(\"p\", {\n    className: \"text-center\"\n  }, post.frontmatter.date), children, previous && React.createElement(React.Fragment, null, previous && React.createElement(Link, {\n    to: previous.fields.slug\n  }, React.createElement(\"p\", null, previous.frontmatter.title))), next && React.createElement(React.Fragment, null, next && React.createElement(Link, {\n    to: next.fields.slug\n  }, React.createElement(\"p\", null, next.frontmatter.title)))), React.createElement(Footer))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n        query PostsBySlug($slug: String) {\n            mdx(fields: { slug: { eq: $slug } }) {\n                frontmatter {\n                    title\n                }\n            }\n        }\n    `;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h1","pre","code","h2","_provideComponents","components","React","wrapper","MDXLayout","BlogPost","styled","div","withConfig","displayName","componentId","BlogPostTemplate","_ref","data","pageContext","children","frontmatter","mdx","previous","next","post","Layout","ThemeProvider","theme","Body","Navigation","Heading","className","title","date","Link","to","fields","slug","Footer","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}