{"version":3,"file":"component---src-templates-blog-post-template-jsx-content-file-path-posts-2024-2024-10-06-another-leetcode-index-mdx-f566a173777ff8e8da11.js","mappings":"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","sources":["webpack://portfolio-app/./posts/2024/2024-10-06-another-leetcode/index.mdx","webpack://portfolio-app/./src/templates/blogPostTemplate.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"We're solving another LeetCode problem today. Tomorrow I will add my new project. Let's dive in.\"), \"\\n\", React.createElement(_components.h2, null, \"The Problem\"), \"\\n\", React.createElement(_components.p, null, \"Today's problem is \", React.createElement(_components.strong, null, \"9. Palindrome Number\"), \". The problem is as follows:\\r\\nGiven an integer x, return true if x is a palindrome, and false otherwise.\"), \"\\n\", React.createElement(_components.p, null, \"Example 1:\\r\\nInput: x = 121\\r\\nOutput: true\\r\\nExplanation: 121 reads as 121 from left to right and from right to left.\\r\\nExample 2:\"), \"\\n\", React.createElement(_components.p, null, \"Example 2:\\r\\nInput: x = -121\\r\\nOutput: false\\r\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.Write a function that takes the binary representation of a positive integer and returns the number of\\r\\nset bits it has (also known as the Hamming weight).\"), \"\\n\", React.createElement(_components.h2, null, \"The Solution\"), \"\\n\", React.createElement(_components.p, null, \"Let's answer using the UMPIRE method:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Understand\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"We are given an integer, and we are to determine if it is a palindrome.\"), \"\\n\", React.createElement(_components.li, null, \"In an interview. I would ask if we can solve this using strings or if I should solve it mathematically.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Match\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"We can match this problem to a math problem or string problem.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Plan\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"We can write a function which casts the number a string, and it will check if the first and last digits are the same until there is 1 or less digits.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Implement\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"class Solution:\\r\\n    def isPalindrome(self, x: int) -> bool:\\r\\n        def recursivePalindrome(s: str) -> bool:\\r\\n            if len(s) <= 1:\\r\\n                return True\\r\\n            elif s[0] != s[-1]:\\r\\n                return False\\r\\n            return recursivePalindrome(s[1:-1])\\r\\n        \\r\\n        return recursivePalindrome(str(x))\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Review\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"We implemented this using a locally defined recursive function.\"), \"\\n\", React.createElement(_components.li, null, \"We can test our code using the examples provided.\"), \"\\n\", React.createElement(_components.li, null, \"x = 121\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"return True\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"    def test_isPalindrome(self):\\r\\n        assert self.test_isPalindrome(1221)\\r\\n        assert not self.test_isPalindrome(31)\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Evaluate\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Our code runs in O(n) time complexity due the call being done n/2 times.\"), \"\\n\", React.createElement(_components.li, null, \"Our space complexity is O(n) as we are storing the string in memory each time we recursively call.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"We can reduce the complexity to constant space by using pointers.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"    def isPalindrome(x: int) -> bool:\\r\\n        s = str(x)\\r\\n        left = 0\\r\\n        right = len(s) - 1\\r\\n        while left < right:\\r\\n            if s[left] != s[right]:\\r\\n                return False\\r\\n            left += 1\\r\\n            right -= 1\\r\\n        return True\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/trill/Development/gatsby-portfolio-with-blog/posts/2024/2024-10-06-another-leetcode/index.mdx\";\nimport {graphql, Link} from 'gatsby';\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport {Heading} from '../components/style.js';\nimport Dump from '../components/Dump';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {theme, Body} from '../components/style';\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\nexport const BlogPost = (styled.div)`\n    margin: 0 auto;\n    margin-top: 6em;\n    max-width: 800px;\n    padding: 20px;\n`;\nfunction BlogPostTemplate({data, pageContext, children}) {\n  const {frontmatter} = data.mdx;\n  const {previous, next, post} = pageContext;\n  return React.createElement(Layout, null, React.createElement(ThemeProvider, {\n    theme: theme\n  }, React.createElement(Body, null, React.createElement(Navigation), React.createElement(BlogPost, null, React.createElement(Heading, {\n    className: \"text-center\"\n  }, frontmatter.title), React.createElement(\"p\", {\n    className: \"text-center\"\n  }, post.frontmatter.date), children, previous && React.createElement(React.Fragment, null, previous && React.createElement(Link, {\n    to: previous.fields.slug\n  }, React.createElement(\"p\", null, previous.frontmatter.title))), next && React.createElement(React.Fragment, null, next && React.createElement(Link, {\n    to: next.fields.slug\n  }, React.createElement(\"p\", null, next.frontmatter.title)))), React.createElement(Footer))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n        query PostsBySlug($slug: String) {\n            mdx(fields: { slug: { eq: $slug } }) {\n                frontmatter {\n                    title\n                }\n            }\n        }\n    `;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","strong","ul","li","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","BlogPost","styled","div","withConfig","displayName","componentId","BlogPostTemplate","_ref","data","pageContext","children","frontmatter","mdx","previous","next","post","Layout","ThemeProvider","theme","Body","Navigation","Heading","title","date","Link","to","fields","slug","Footer","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}