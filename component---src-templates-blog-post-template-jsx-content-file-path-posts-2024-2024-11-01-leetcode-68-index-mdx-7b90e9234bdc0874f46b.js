"use strict";(self.webpackChunkportfolio_app=self.webpackChunkportfolio_app||[]).push([[8662],{5049:function(e,n,t){t.r(n),t.d(n,{BlogPost:function(){return d},default:function(){return f}});var r=t(8453),a=t(6540);function l(e){const n=Object.assign({p:"p",h1:"h1",pre:"pre",code:"code"},(0,r.R)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"This took a while to solve. I completed it over two days, then I had the help of ChatGPT to analyze the complexity.\nI reviewed other answers and I didn't find simpler methods."),"\n",a.createElement(n.h1,null,"Solution"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-python"},"class Solution:\n    def fullJustify(self, words: List[str], maxWidth: int) -> List[str]:\n        width = 0\n        rows = []\n        row = []\n        for word in words:\n            line = ' '.join(row + [word])\n            if len(line) > maxWidth:\n                charCount = len(''.join(row))\n                spaceRemaining = maxWidth - charCount\n                if len(row) > 1:\n                    spaces = [spaceRemaining // (len(row) - 1) for _ in range(len(row) - 1)]\n                    for i in range(spaceRemaining % (len(row) - 1)):\n                        spaces[i] += 1\n                else:\n                    spaces = [spaceRemaining]\n                print(spaces, row)\n                line = ''\n                for i in range(len(row)):\n                    line += row[i]\n                    if i < len(spaces):\n                        line += ' ' * spaces[i]\n                rows.append(line)\n                row = []\n            row.append(word)\n\n        charCount = len(' '.join(row))\n        spaceRemaining = maxWidth - charCount\n        line = ' '.join(row)\n        line += ' ' * spaceRemaining\n        rows.append(line)\n        return rows\n\n")),"\n",a.createElement(n.p,null,"O(n) = n * m where n is the number of words and m is the average row length"))}var o=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.R)(),e.components);return n?a.createElement(n,e,a.createElement(l,e)):l(e)},i=t(4810),s=t(4733),c=t(40),m=(t(5147),t(1686)),p=t(9389),u=t(9654);const d=m.default.div.withConfig({displayName:"blogPostTemplate__BlogPost",componentId:"sc-1p2ssye-0"})(["margin:0 auto;margin-top:6em;max-width:800px;padding:20px;"]);function w(e){let{data:n,pageContext:t,children:r}=e;const{frontmatter:l}=n.mdx,{previous:o,next:w,post:f}=t;return a.createElement(s.A,null,a.createElement(m.ThemeProvider,{theme:c.w4},a.createElement(c.nB,null,a.createElement(p.A),a.createElement(d,null,a.createElement(c.DZ,{className:"text-center"},l.title),a.createElement("p",{className:"text-center"},f.frontmatter.date),r,o&&a.createElement(a.Fragment,null,o&&a.createElement(i.N_,{to:o.fields.slug},a.createElement("p",null,o.frontmatter.title))),w&&a.createElement(a.Fragment,null,w&&a.createElement(i.N_,{to:w.fields.slug},a.createElement("p",null,w.frontmatter.title)))),a.createElement(u.A))))}function f(e){return a.createElement(w,e,a.createElement(o,e))}},5147:function(e,n,t){t(6540)}}]);
//# sourceMappingURL=component---src-templates-blog-post-template-jsx-content-file-path-posts-2024-2024-11-01-leetcode-68-index-mdx-7b90e9234bdc0874f46b.js.map