"use strict";(self.webpackChunkportfolio_app=self.webpackChunkportfolio_app||[]).push([[8087],{3012:function(e,t,n){n.r(t),n.d(t,{BlogPost:function(){return p},default:function(){return h}});var r=n(8453),l=n(6540);function a(e){const t=Object.assign({p:"p",h1:"h1",pre:"pre",code:"code"},(0,r.R)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.p,null,"I was able to reduce this time complexity from  O(n) = 2n to O(n) = n by using a list for the elements to be reversed, and then only modifying those rather than stepping through all nodes while reversing."),"\n",l.createElement(t.h1,null,"Solution"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-python"},"# Definition for singly-linked list.\r\n# class ListNode:\r\n#     def __init__(self, val=0, next=None):\r\n#         self.val = val\r\n#         self.next = next\r\nclass Solution:\r\n    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:\r\n        first = head\r\n        start = None\r\n        end = None\r\n        last = None\r\n        toReverse = []\r\n        i = 0\r\n        while i < right:\r\n            if i == max(left - 2, 0):\r\n                start = head\r\n            if i == right - 1:\r\n                end = head\r\n            if i >= left - 1 and i < right - 1:\r\n                toReverse.append(head)\r\n            head = head.next\r\n            i += 1\r\n        \r\n        last = end.next\r\n        if left > 1:\r\n            start.next = end\r\n            start = start.next\r\n        else:\r\n            start = end\r\n            first = start\r\n        head = start\r\n        while toReverse:\r\n            head.next = toReverse.pop()\r\n            head = head.next\r\n        if head.next:\r\n            head.next = last\r\n\r\n        return first\n")))}var o=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,r.R)(),e.components);return t?l.createElement(t,e,l.createElement(a,e)):a(e)},i=n(4810),s=n(4733),c=n(40),d=(n(5147),n(1686)),m=n(9389),f=n(9654);const p=d.default.div.withConfig({displayName:"blogPostTemplate__BlogPost",componentId:"sc-1p2ssye-0"})(["margin:0 auto;margin-top:6em;max-width:800px;padding:20px;"]);function u(e){let{data:t,pageContext:n,children:r}=e;const{frontmatter:a}=t.mdx,{previous:o,next:u,post:h}=n;return l.createElement(s.A,null,l.createElement(d.ThemeProvider,{theme:c.w4},l.createElement(c.nB,null,l.createElement(m.A),l.createElement(p,null,l.createElement(c.DZ,{className:"text-center"},a.title),l.createElement("p",{className:"text-center"},h.frontmatter.date),r,o&&l.createElement(l.Fragment,null,o&&l.createElement(i.N_,{to:o.fields.slug},l.createElement("p",null,o.frontmatter.title))),u&&l.createElement(l.Fragment,null,u&&l.createElement(i.N_,{to:u.fields.slug},l.createElement("p",null,u.frontmatter.title)))),l.createElement(f.A))))}function h(e){return l.createElement(u,e,l.createElement(o,e))}},5147:function(e,t,n){n(6540)}}]);
//# sourceMappingURL=component---src-templates-blog-post-template-jsx-content-file-path-posts-2024-2024-11-18-leetcode-92-index-mdx-77c77a1fc4b4fc327043.js.map