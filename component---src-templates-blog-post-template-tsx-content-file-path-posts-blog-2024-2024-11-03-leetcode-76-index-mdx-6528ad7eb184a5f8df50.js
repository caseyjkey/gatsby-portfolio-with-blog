"use strict";(self.webpackChunkportfolio_app=self.webpackChunkportfolio_app||[]).push([[5152],{7412:function(e,t,n){n.r(t),n.d(t,{BlogPost:function(){return f},default:function(){return g}});var r=n(8453),l=n(6540);function s(e){const t=Object.assign({p:"p",h1:"h1",pre:"pre",code:"code"},(0,r.R)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.p,null,"Last problem for this study set's sliding window problems."),"\n",l.createElement(t.h1,null,"Solution"),"\n",l.createElement(t.p,null,"This is my initial greedy solution. It passes initial test cases, but fails longer inputs."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-python"},'class Solution:\n    def minWindow(self, s: str, t: str) -> str:\n        def containsT(substring):\n            letters = list(t[:])\n            for i in substring:\n                if i in letters:\n                    letters.remove(i)\n            return len(letters) == 0\n\n        n = len(t)\n        m = len(s)\n        windowSize = n\n        while windowSize <= m:\n            for i in range(0, m):\n                substring = s[i:i+windowSize]\n                if containsT(substring):\n                    return substring\n            windowSize += 1\n        return ""\n')),"\n",l.createElement(t.p,null,"Now to optimize my solution, I plan on stepping through the ",l.createElement(t.code,null,"s")," string, and tracking how many counts of ",l.createElement(t.code,null,"t")," letters are found. This should be faster as we are keeping track of letter counts as we go, instead of searching for all letters in the substring for each iteration."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-python"},'class Solution:\n    def minWindow(self, s: str, t: str) -> str:\n        letterCounts = dict()\n        for letter in t:\n            if letter in letterCounts:\n                letterCounts[letter] += 1\n            else:\n                letterCounts[letter] = 1\n        \n        start = 0\n        end = 0\n        windowLength = len(s) + 1\n        minStart = 0\n        lettersRemaining = len(t)\n\n        while end < len(s):\n            if s[end] in letterCounts:\n                if letterCounts[s[end]] > 0:\n                    lettersRemaining -= 1\n                letterCounts[s[end]] -= 1\n            \n            while lettersRemaining == 0:\n                if end - start + 1 < windowLength:\n                    windowLength = end - start + 1\n                    minStart = start\n                if s[start] in letterCounts:\n                    letterCounts[s[start]] += 1\n                    if letterCounts[s[start]] > 0:\n                        lettersRemaining += 1\n                start += 1\n            end += 1\n\n        if windowLength == len(s) + 1:\n            return ""\n        else:\n            return s[minStart:minStart + windowLength]\n\n        return ""\n')))}var i=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,r.R)(),e.components);return t?l.createElement(t,e,l.createElement(s,e)):s(e)},a=n(4810),o=n(4399),u=n(3614),c=n(1510),m=n(6409),d=n(572);const f=c.default.div.withConfig({displayName:"blogPostTemplate__BlogPost",componentId:"sc-6bdelx-0"})(["margin:0 auto;margin-top:6em;max-width:800px;padding:20px;"]);function p(e){let{data:t,pageContext:n,children:r}=e;const{frontmatter:s}=t.mdx,{previous:i,next:p,post:g}=n;return l.createElement(o.A,null,l.createElement(c.ThemeProvider,{theme:u.w4},l.createElement(u.nB,null,l.createElement(m.A,null),l.createElement(f,null,l.createElement(u.DZ,{className:"text-center"},s.title),l.createElement("p",{className:"text-center"},g.frontmatter.date),r,i&&l.createElement(l.Fragment,null,i&&l.createElement(a.N_,{to:i.fields.slug},l.createElement("p",null,i.frontmatter.title))),p&&l.createElement(l.Fragment,null,p&&l.createElement(a.N_,{to:p.fields.slug},l.createElement("p",null,p.frontmatter.title)))),l.createElement(d.A,null))))}function g(e){return l.createElement(p,e,l.createElement(i,e))}}}]);
//# sourceMappingURL=component---src-templates-blog-post-template-tsx-content-file-path-posts-blog-2024-2024-11-03-leetcode-76-index-mdx-6528ad7eb184a5f8df50.js.map