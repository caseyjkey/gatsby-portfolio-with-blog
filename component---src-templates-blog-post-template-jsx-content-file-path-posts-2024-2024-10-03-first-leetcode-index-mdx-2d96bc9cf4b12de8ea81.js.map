{"version":3,"file":"component---src-templates-blog-post-template-jsx-content-file-path-posts-2024-2024-10-03-first-leetcode-index-mdx-2d96bc9cf4b12de8ea81.js","mappings":"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","sources":["webpack://portfolio-app/./posts/2024/2024-10-03-first-leetcode/index.mdx","webpack://portfolio-app/./src/templates/blogPostTemplate.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"My First LeetCode Blog Post\"), \"\\n\", React.createElement(_components.p, null, \"I have already been working on LeetCode's top interview problems. I started a couple months ago\\r\\nin preparation for my interviews with Google. Although that has passed, more opportunities are becoming available.\\r\\nSo, we are back on the grind.\"), \"\\n\", React.createElement(_components.h2, null, \"The Problem\"), \"\\n\", React.createElement(_components.p, null, \"Today we are working on \", React.createElement(_components.strong, null, \"35. Search Insert Position\"), \". The problem is as follows:\\r\\nGiven a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.\"), \"\\n\", React.createElement(_components.p, null, \"You must write an algorithm with O(log n) runtime complexity.\"), \"\\n\", React.createElement(_components.p, null, \"Example 1:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Input: nums = [1,3,5,6], target = 5\"), \"\\n\", React.createElement(_components.li, null, \"Output: 2\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Example 2:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Input: nums = [1,3,5,6], target = 2\"), \"\\n\", React.createElement(_components.li, null, \"Output: 1\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Example 3:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Input: nums = [1,3,5,6], target = 7\"), \"\\n\", React.createElement(_components.li, null, \"Output: 4\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"The Solution\"), \"\\n\", React.createElement(_components.p, null, \"I like to format my answers using the UMPIRE method:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Understand\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"We are given a sorted array, and we are searching for an expected value.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Match\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"We can match this problem to a binary search problem, given the O(log N) complexity.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Plan\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"We will want a function that takes in an array and returns an integer.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Implement\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"    def searchInsert(self, nums: List[int], target: int) -> int:\\r\\n        left = 0\\r\\n        right = len(nums) - 1\\r\\n        while left <= right:\\r\\n            mid = left + (right - left) // 2\\r\\n            if nums[mid] == target:\\r\\n                return mid\\r\\n            elif nums[mid] < target:\\r\\n                left = mid + 1\\r\\n            else:\\r\\n                right = mid - 1\\r\\n        \\r\\n        return mid\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Review\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"The code is clean and concise. We used descriptive variable names. We have implemented a binary search.\"), \"\\n\", React.createElement(_components.li, null, \"We can test our code using the examples provided.\"), \"\\n\", React.createElement(_components.li, null, \"nums = [1,3,5,6], target = 5\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"left = 0, right = 3, mid = 1\"), \"\\n\", React.createElement(_components.li, null, \"nums[1] = 3 < 5, left = 2\"), \"\\n\", React.createElement(_components.li, null, \"nums[2] = 5 == 5, return 2\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Now let's test an edge case where the element is not in the array.\"), \"\\n\", React.createElement(_components.li, null, \"nums = [1,3,5,6], target = 2\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"left = 0, right = 3, mid = 1\"), \"\\n\", React.createElement(_components.li, null, \"nums[1] = 3 > 2, right = 0\"), \"\\n\", React.createElement(_components.li, null, \"nums[0] = 1 < 2, left = 1\"), \"\\n\", React.createElement(_components.li, null, \"return 0\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"We see we are not getting the expected output. We need to rework to support this edge case.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Evaluate\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"We are getting the expected runtime complexity. We are not getting expected result for missing elements.\"), \"\\n\", React.createElement(_components.li, null, \"Refactor\"), \"\\n\", React.createElement(_components.li, null, \"We need to return the \", React.createElement(_components.code, null, \"left\"), \" pointer, not the \", React.createElement(_components.code, null, \"mid\"), \" pointer.\"), \"\\n\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/Casey/Development/gatsby-portfolio-with-blog/posts/2024/2024-10-03-first-leetcode/index.mdx\";\nimport {graphql, Link} from 'gatsby';\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport {Heading} from '../components/style.js';\nimport Dump from '../components/Dump';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {theme, Body} from '../components/style';\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\nexport const BlogPost = (styled.div)`\n    margin: 0 auto;\n    margin-top: 6em;\n    max-width: 800px;\n    padding: 20px;\n`;\nfunction BlogPostTemplate({data, pageContext, children}) {\n  const {frontmatter} = data.mdx;\n  const {previous, next, post} = pageContext;\n  return React.createElement(Layout, null, React.createElement(ThemeProvider, {\n    theme: theme\n  }, React.createElement(Body, null, React.createElement(Navigation), React.createElement(BlogPost, null, React.createElement(Heading, {\n    className: \"text-center\"\n  }, frontmatter.title), React.createElement(\"p\", {\n    className: \"text-center\"\n  }, post.frontmatter.date), children, previous && React.createElement(React.Fragment, null, previous && React.createElement(Link, {\n    to: previous.fields.slug\n  }, React.createElement(\"p\", null, previous.frontmatter.title))), next && React.createElement(React.Fragment, null, next && React.createElement(Link, {\n    to: next.fields.slug\n  }, React.createElement(\"p\", null, next.frontmatter.title)))), React.createElement(Footer))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n        query PostsBySlug($slug: String) {\n            mdx(fields: { slug: { eq: $slug } }) {\n                frontmatter {\n                    title\n                }\n            }\n        }\n    `;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","strong","ul","li","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","BlogPost","styled","div","_templateObject","_taggedTemplateLiteralLoose","BlogPostTemplate","_ref","data","pageContext","children","frontmatter","mdx","previous","next","post","Layout","ThemeProvider","theme","Body","Navigation","Heading","title","date","Link","to","fields","slug","Footer","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}