{"data":{"allMdx":{"nodes":[{"id":"92a83704-3978-591b-a119-f02ccaae3af2","excerpt":"I went through a period of intense study, focusing on solving problems with C++. Now, I'm back to Python and happy to walk through this solution to\r longest valid parantheses.\n\nclass Solution:\r\n    def longestValidParentheses(self, s: str) -> int:…","frontmatter":{"title":"LeetCode 32. Longest Valid Parantheses","date":"2025 May 3rd","cover":null},"fields":{"slug":"/blog/2025/2025-5-3-leetcode-32/"}},{"id":"5a626421-ab2e-5a1c-a893-ee227e747f4e","excerpt":"I completed the LeetCode 150! Since then, I haven't stopped practicing. I want to master common algorithms and feel confident for future interviews.\n\nFor this problem, I started with this greedy solution. We always flip a zero if\r we haven't done so…","frontmatter":{"title":"LeetCode 1004. Max Consecutive Ones III","date":"2025 February 13th","cover":null},"fields":{"slug":"/blog/2025/2025-2-15-leetcode-1004/"}},{"id":"7a71d983-8a17-5887-8be4-afdf865af1fa","excerpt":"Today I start working on multidimensional DP. I expect these problems to require a dynamicly-sized array to build a solution, rather than a static number of variables.\r I chose to write about this problem because it is a great example\r of how we can…","frontmatter":{"title":"LeetCode 120. Triangle","date":"2025 January 21st","cover":null},"fields":{"slug":"/blog/2025/2025-1-21-leetcode-120/"}},{"id":"adb376b8-2c68-5efe-9e3e-b2f2e3974caf","excerpt":"We're working through binary search problems. This one has an initial solution with many lines duplicated.\r We further work the solution to use a function and a boolean variable to make the code more clean via the DRY principle.\n\nclass Solution:…","frontmatter":{"title":"LeetCode 34. Find First and Last Position of Element in Sorted Array","date":"2025 January 7th","cover":null},"fields":{"slug":"/blog/2025/2025-1-7-leetcode-34/"}},{"id":"8d6c5dd2-5d41-5cd9-80a7-c51795ae2776","excerpt":"Today I worked on a general graph problem. My initial solution was much more verbose and less readable than another coder's solution. However, I feel like during an interview I would have been able to derive\r the simpler solution through asking…","frontmatter":{"title":"LeetCode 207. Course Schedule","date":"2024 December 28th","cover":null},"fields":{"slug":"/blog/2024/2024-12-28-leetcode-207/"}},{"id":"6f9ca6cd-717b-5387-bf90-480247acc81d","excerpt":"Here's another backtracking problem. For this post, I'd like to discuss the differences between my solution and another submitted solution.\n\nclass Solution:\r\n    def generateParenthesis(self, n: int) -> List[str]:\r\n        results = []\r\n        def…","frontmatter":{"title":"LeetCode 22. Generate Parentheses","date":"2024 December 25th","cover":null},"fields":{"slug":"/blog/2024/2024-12-25-leetcode-22/"}},{"id":"4e260c2e-3399-5e09-b9a0-1d96dcaed030","excerpt":"I've been working on backtracking problems. For this one, it helped to visualize the recursion stack using Python Tutor.\r Also, I will have to revisit this later as the complexity analysis is out-of-the-ordinary.\n\nclass Solution:\r\n    def combine…","frontmatter":{"title":"LeetCode 77. Combinations","date":"2024 December 21st","cover":null},"fields":{"slug":"/blog/2024/2024-12-21-leetcode-77/"}},{"id":"c8e84d56-caf2-525c-a778-ff3ac04d1773","excerpt":"This problem stumped me for a while because I needed to use a dictionary to make sure I didn't have duplicate copies, then I also forgot to return the copy at the end of the DFS algorithm. \"\"\"\r\n# Definition for a Node.\r\nclass Node:\r\n    def __init__…","frontmatter":{"title":"LeetCode 133. Clone Graph","date":"2024 December 18th","cover":null},"fields":{"slug":"/blog/2024/2024-12-18-leetcode-133/"}},{"id":"54419431-c1e6-5ebc-bcc3-20f99dd37f85","excerpt":"Here are two solutions. One is recursive and the other iterative. The iterative solution is better as it can handle larger inputs.\n\nRecursive\n\nfrom collections import deque\r\n# Definition for a binary tree node.\r\n# class TreeNode:\r\n#     def __init…","frontmatter":{"title":"LeetCode 173. Binary Search Tree Iterator","date":"2024 December 14th","cover":null},"fields":{"slug":"/blog/2024/2024-12-14-leetcode-173/"}},{"id":"606ea066-a0be-5ed6-b944-d3ac3f9f2bdb","excerpt":"I am glad I was able to make a solution from my own intuition. from collections import deque\r\n# Definition for a binary tree node.\r\n# class TreeNode:\r\n#     def __init__(self, val=0, left=None, right=None):\r\n#         self.val = val\r\n#         self…","frontmatter":{"title":"LeetCode 103. Binary Tree Zigzag Level Order Traversal","date":"2024 December 12th","cover":null},"fields":{"slug":"/blog/2024/2024-12-12-leetcode-103/"}},{"id":"75a0ce5f-f78f-5cf3-8246-d13c27f336c1","excerpt":"This is the last month of my goal toward 150 problems done by 2025. I'll have to pick up more than a few problems this weekend. I have 56 problems remaining. from collections import deque\r\n\r\n# Definition for a binary tree node.\r\n# class TreeNode:\r\n#…","frontmatter":{"title":"LeetCode 236. Lowest Common Ancestor of a Binary Tree","date":"2024 December 5th","cover":null},"fields":{"slug":"/blog/2024/2024-12-05-leetcode-236/"}},{"id":"a6a2570c-9b00-5e5b-a793-abf1d2b38d1a","excerpt":"Happy Thanksgiving! I am happy to have solved this without looking up a solution. However, I did have to review traversals. from collections import deque\r\n\r\n# Definition for a binary tree node.\r\n# class TreeNode:\r\n#     def __init__(self, val=0…","frontmatter":{"title":"LeetCode 105. Construct Binary Tree from Preoder and Inorder Traversal","date":"2024 November 28th","cover":null},"fields":{"slug":"/blog/2024/2024-11-28-leetcode-105/"}},{"id":"3e7d25d2-5c4a-58c7-b576-99d14aabfb9b","excerpt":"This took me a few days although it's only a medium! It is important to remember Python is pass-by-reference. I spent a lot of time debugging because I didn't mirror changes between previous and next nodes when moving a node between them.\r I was…","frontmatter":{"title":"LeetCode 146. LRU Cache","date":"2024 November 26th","cover":null},"fields":{"slug":"/blog/2024/2024-11-26-leetcode-146/"}},{"id":"454f2d38-f870-579b-bd7c-a1e37b44902d","excerpt":"I had to read the comments to understand this problem. I didn't understand how they wanted the ordering until I read a few examples. # Definition for singly-linked list.\r\n# class ListNode:\r\n#     def __init__(self, val=0, next=None):\r\n#         self…","frontmatter":{"title":"LeetCode 86. Partition List","date":"2024 November 23rd","cover":null},"fields":{"slug":"/blog/2024/2024-11-23-leetcode-86/"}},{"id":"0dacd982-1195-5704-9a7d-16064cea5b49","excerpt":"The trick for this one was tracking duplicates via the unique boolean and a pending variable. # Definition for singly-linked list.\r\n# class ListNode:\r\n#     def __init__(self, val=0, next=None):\r\n#         self.val = val\r\n#         self.next = next…","frontmatter":{"title":"LeetCode 82. Remove Duplicates from Sorted List II","date":"2024 November 21st","cover":null},"fields":{"slug":"/blog/2024/2024-11-21-leetcode-82/"}},{"id":"232b05c8-9e9c-52b9-bc28-5fe1b7c113e7","excerpt":"Today I chose an easy problem since I had a late day at work and gym afterwards. from collections import deque\r\n\r\n# Definition for a binary tree node.\r\n# class TreeNode:\r\n#     def __init__(self, val=0, left=None, right=None):\r\n#         self.val…","frontmatter":{"title":"LeetCode 100. Same Tree","date":"2024 November 20th","cover":null},"fields":{"slug":"/blog/2024/2024-11-20-leetcode-100/"}},{"id":"40961a7e-265c-5862-8cc4-8c46cba254f0","excerpt":"I had difficulties with this problem with terminating completed lists. I was surprised that ChatGPT didn't give this simple solution, it suggested a large rework. I'll have to be mindful before implementing all of ChatGPT's suggestions.\n\n# Definitio…","frontmatter":{"title":"LeetCode 25. Reverse Nodes in k-Group","date":"2024 November 19th","cover":null},"fields":{"slug":"/blog/2024/2024-11-19-leetcode-25/"}},{"id":"5c95ca88-7e82-57a2-9b57-e62f410f3be4","excerpt":"I was able to reduce this time complexity from O(n) = 2n to O(n) = n by using a list for the elements to be reversed, and then only modifying those rather than stepping through all nodes while reversing. # Definition for singly-linked list…","frontmatter":{"title":"LeetCode 92. Reverse Linked List II","date":"2024 November 18th","cover":null},"fields":{"slug":"/blog/2024/2024-11-18-leetcode-92/"}},{"id":"4a5aa29a-b40c-5a64-a885-e0bded886296","excerpt":"This problem was tricky as I had to track Node references rather than the index given in the input. from collections import defaultdict\r\n\"\"\"\r\n# Definition for a Node.\r\nclass Node:\r\n    def __init__(self, x: int, next: 'Node' = None, random: 'Node' =…","frontmatter":{"title":"LeetCode 138. Copy List with Random Pointer","date":"2024 November 15th","cover":null},"fields":{"slug":"/blog/2024/2024-11-15-leetcode-138/"}},{"id":"8d774a69-5926-5ec1-9b4d-abaae900cc09","excerpt":"Final stack problem for this practice set is a hard question. Took me an hour and a half to come up with this convoluted method. Parsing numbers character by character was my first mistake.\n\nclass Solution:\r\n    def calculate(self, s: str) -> int:…","frontmatter":{"title":"LeetCode 224. Basic Calculator","date":"2024 November 14th","cover":null},"fields":{"slug":"/blog/2024/2024-11-14-leetcode-224/"}},{"id":"d381e606-b562-5d2f-b38e-757c3f079385","excerpt":"Now I'm on to stacks. I had to rethink my strategy of going from right to left, to left to right. I was overcomplicating it. class Solution:\r\n    def evalRPN(self, tokens: List[str]) -> int:\r\n        stack = []\r\n        for token in tokens:…","frontmatter":{"title":"LeetCode 150. Evaluate Reverse Polish Notation","date":"2024 November 13th","cover":null},"fields":{"slug":"/blog/2024/2024-11-13-leetcode-150/"}},{"id":"755ad82c-72cf-5c60-8286-7e0a0c5079ca","excerpt":"This took me a long time to cover all cases. class Solution:\r\n    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:\r\n        start, end = newInterval\r\n        inserted = False\r\n        res = []\r\n        for…","frontmatter":{"title":"LeetCode 57. Insert Interval","date":"2024 November 12th","cover":null},"fields":{"slug":"/blog/2024/2024-11-12-leetcode-57/"}},{"id":"19fbdbd1-c3fc-5f99-902f-5424a3dab91d","excerpt":"Now I'm onto intervals. This one merges all intersecting intervals and returns the distinct items. class Solution:\r\n    def merge(self, intervals: List[List[int]]) -> List[List[int]]:\r\n        res = []\r\n        intervals = sorted(intervals)…","frontmatter":{"title":"LeetCode 56. Merge Intervals","date":"2024 November 11th","cover":null},"fields":{"slug":"/blog/2024/2024-11-11-leetcode-56/"}},{"id":"7990c89c-a388-5eef-9cc1-c17b042fdad7","excerpt":"Working on hashmap problems now. from collections import defaultdict\nclass Solution:\n    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:\n        indexToSortedWord = defaultdict(list)\n        for i, word in enumerate(strs…","frontmatter":{"title":"LeetCode 49. Group Anagrams","date":"2024 November 9th","cover":null},"fields":{"slug":"/blog/2024/2024-11-09-leetcode-49/"}},{"id":"6659e493-98a0-55a7-abb3-e08c15d00046","excerpt":"Final matrix problem, this one a bit special to me. My first repo in Github is for a Game of Life program in C++. I created it in 2011 as a science fair project. This method uses constant space by usind integer division and modulo operations. We use…","frontmatter":{"title":"LeetCode 289. Game of Life","date":"2024 November 6th","cover":null},"fields":{"slug":"/blog/2024/2024-11-06-leetcode-289/"}},{"id":"27a1371c-558a-5cf6-a4bc-6c6af190456a","excerpt":"Working through more matrix problems today. I used a method where we transpose the matrix, then reverse the rows. This is memory efficient in space and locality.\n\nclass Solution:\n    def rotate(self, matrix: List[List[int]]) -> None:\n        \"\"\"…","frontmatter":{"title":"LeetCode 48. Rotate Image","date":"2024 November 5th","cover":null},"fields":{"slug":"/blog/2024/2024-11-05-leetcode-48/"}},{"id":"284504ae-afe4-5570-b1fa-25e9443ad465","excerpt":"Now, I am working on matrix problems. This is my initial greedy solution.\n\nclass Solution:\n    def isValidSudoku(self, board: List[List[str]]) -> bool:\n        for row in board:\n            rowVals = set()\n            for column in row:…","frontmatter":{"title":"LeetCode 36. Valid Sudoku","date":"2024 November 4th","cover":null},"fields":{"slug":"/blog/2024/2024-11-04-leetcode-36/"}},{"id":"d71f4dda-1374-5f88-82f9-a163f183954a","excerpt":"Last problem for this study set's sliding window problems. This is my initial greedy solution. It passes initial test cases, but fails longer inputs.\n\nclass Solution:\n    def minWindow(self, s: str, t: str) -> str:\n        def containsT(substring):…","frontmatter":{"title":"LeetCode 76. Minimum Window Substring","date":"2024 November 3rd","cover":null},"fields":{"slug":"/blog/2024/2024-11-03-leetcode-76/"}},{"id":"470571f2-1de5-5fef-ba59-321ddf3e59ab","excerpt":"Starting with a hard problem today. class Solution:\n    def findSubstring(self, s: str, words: List[str]) -> List[int]:\n        lenTotal = len(''.join(words))\n        perms = set()\n        def permutations(head, tail):\n            if not len(head):…","frontmatter":{"title":"LeetCode 30. Substring with Concatenation of All Words","date":"2024 November 2nd","cover":null},"fields":{"slug":"/blog/2024/2024-11-02-leetcode-30/"}},{"id":"5e8e4c54-189d-527f-b967-fd9b5f6bd875","excerpt":"This took a while to solve. I completed it over two days, then I had the help of ChatGPT to analyze the complexity. I reviewed other answers and I didn't find simpler methods. class Solution:\n    def fullJustify(self, words: List[str], maxWidth: int…","frontmatter":{"title":"LeetCode 68. Text Justification","date":"2024 November 1st","cover":null},"fields":{"slug":"/blog/2024/2024-11-01-leetcode-68/"}},{"id":"d9ee5e62-9a94-5fc2-bc5e-e4464376f109","excerpt":"This was an easy problem. class Solution:\n    def strStr(self, haystack: str, needle: str) -> int:\n        for j in range(len(haystack)):\n            if haystack[j:j + len(needle)] == needle:\n                return j\n        return -1\n\n\nO(n) = n","frontmatter":{"title":"LeetCode 28. Find the Index of the First Occurrence in a String","date":"2024 October 31st","cover":null},"fields":{"slug":"/blog/2024/2024-10-31-leetcode-28/"}},{"id":"75acb47e-a758-5239-b9a6-a24030b5bbfa","excerpt":"This one took me about 15 minutes to come up with a solution. I then worked through it with this naive solution. class Solution:\n    def convert(self, s: str, numRows: int) -> str:\n        grid = [['' for column in range(len(s))] for row in range…","frontmatter":{"title":"LeetCode 6. Zigzag Conversion","date":"2024 October 30th","cover":null},"fields":{"slug":"/blog/2024/2024-10-30-leetcode-6/"}},{"id":"d8f952f0-7065-5c18-82e4-2e41a6dc1bb6","excerpt":"I started feeling down about my past interview performance. Rather than continue ruminating, I decided to continue my LeetCode grind tonight. My goal is to complete the Top 150 Interview Questions before the end of the year. class Solution:\n    def…","frontmatter":{"title":"LeetCode 12. Integer to Roman","date":"2024 October 28th","cover":null},"fields":{"slug":"/blog/2024/2024-10-28-leetcode-12/"}},{"id":"e198d63f-7bc8-523c-8e7a-450941c11781","excerpt":"Finished a couple easy problems, then this medium problem. I feel like this was made easier by python's list slicing. class Solution:\n    def reverseWords(self, s: str) -> str:\n        return ' '.join(s.split()[::-1])\n\n\nO(n) = n","frontmatter":{"title":"LeetCode 12. Integer to Roman","date":"2024 October 28th","cover":null},"fields":{"slug":"/blog/2024/2024-10-29-leetcode-151/"}},{"id":"6116eade-f904-5145-927b-ff2ab9b5108c","excerpt":"Getting back into the habit of solving LeetCode problems. Today's problem is LeetCode 74. Search a 2D Matrix.\n\nWe have to solve this in O(log(m*n)) time complexity. So, I think of binary search in 2 dimensions. Once for the row, and once for the…","frontmatter":{"title":"LeetCode 74. Search a 2D Matrix","date":"2024 October 22nd","cover":null},"fields":{"slug":"/blog/2024/2024-10-22-leetcode-74/"}},{"id":"6eda93f7-fe78-57ae-bf72-9cf822eb8170","excerpt":"The intial phone screen for the StubHub interview went well. I was asked about my experience with Terraform. I admitted that I have only used it once before. and it has been many years since then. However, I used AWS CDK frequently at my last job…","frontmatter":{"title":"Learning Terraform","date":"2024 October 15th","cover":null},"fields":{"slug":"/blog/2024/2024-10-15-learning-terraform/"}},{"id":"c52bf114-a6ee-5e6e-8381-a7eca711a51c","excerpt":"I'm looking forward to an interview for a software engineer position at StubHub. It offers work with microservices, kubernetes, and cloud-native technologies.\r The position focuses on DevOps, such as infrastructure, build, deployment, and artifact…","frontmatter":{"title":"Email Processing System Design","date":"2024 October 13th","cover":null},"fields":{"slug":"/blog/2024/2024-10-13-email-processing-design/"}},{"id":"cff2d2c2-8ffc-565b-9bc7-9e4a8ee62d7d","excerpt":"I've began a new project, scholarships-plus. This will be a CRUD app for tracking and improving scholarship essays. I am creating this app to improve student's scholarship essays by improving their past submissions.\r This app will allow students to…","frontmatter":{"title":"Scholarships Plus","date":"2024 October 8th","cover":null},"fields":{"slug":"/blog/2024/2024-10-08-scholarships-plus/"}},{"id":"e948b4a5-4a0c-50eb-82ff-0a8aa9661dd9","excerpt":"Today I decided to embrace the AI revolution and try out Cursor. I'm going to write a quick LeetCode solution, then dive into some project ideas. The Problem\n\nSince we have some help from Cursor tonight, we wil be solving a hard problem.\r Today's…","frontmatter":{"title":"Intro to Cursor","date":"2024 October 7th","cover":null},"fields":{"slug":"/blog/2024/2024-10-07-intro-to-cursor/"}},{"id":"e4239ef7-d55a-52a2-a3b9-749eb472f307","excerpt":"We're solving another LeetCode problem today. Tomorrow I will add my new project. Let's dive in. The Problem\n\nToday's problem is 9. Palindrome Number. The problem is as follows:\r Given an integer x, return true if x is a palindrome, and false…","frontmatter":{"title":"Another LeetCode Blog Post","date":"2024 October 6th","cover":null},"fields":{"slug":"/blog/2024/2024-10-06-another-leetcode/"}},{"id":"03cdff08-6052-5217-a82e-4ac388ece18b","excerpt":"We're solving another LeetCode problem today instead of adding a new project to my portfolio. This one is focused on bit manipulation. Let's dive in. The Problem\n\nToday's problem is 191. Number of 1 Bits. The problem is as follows:\r Write a function…","frontmatter":{"title":"LeetCode 191. Number of 1 Bits","date":"2024 October 5th","cover":null},"fields":{"slug":"/blog/2024/2024-10-05-leetcode-procrastination/"}},{"id":"1e88bfff-b8c1-5504-a8a0-cdfcd84955ac","excerpt":"Today is another easy problem, and it is focused on bit manipulation. Let's dive on in.\n\nThe Problem\n\nToday's problem is 190. Reverse Bits. The problem is as follows:\r Reverse bits of a given 32 bits unsigned integer.\n\nThe Solution\n\nI like to format my…","frontmatter":{"title":"LeetCode 190. Reverse Bits","date":"2024 October 4th","cover":null},"fields":{"slug":"/blog/2024/2024-10-04-second-leetcode/"}},{"id":"b70931a1-8caf-53d9-9dea-fff8f9446bde","excerpt":"I have already been working on LeetCode's top interview problems. I started a couple months ago in preparation for my interviews with Google. Although that has passed, more opportunities are becoming available.\r So, we are back on the grind.\n\nThe…","frontmatter":{"title":"LeetCode 35. Search Insert Position","date":"2024 October 3rd","cover":null},"fields":{"slug":"/blog/2024/2024-10-03-first-leetcode/"}},{"id":"7ec6aaef-60b6-5d41-82c5-7b18802741ff","excerpt":"Applications Developer 2 | April 2024 - September 2025 Key Achievements\nBuilt and launched a scalable release management tool supporting 13,780 users with high reliability Mentored new developers, facilitating knowledge transfer and collaborative…","frontmatter":{"title":"Oracle Release Management","date":"2024 April 1st","cover":null},"fields":{"slug":"/projects/2024-04-farmx/"}},{"id":"168e14f4-5198-508e-948c-20516cfc0691","excerpt":"To remove the Zone:Identifier files, execute: find . -name \"*:Zone.Identifier\" -type f -delete\n\n\nThen to prevent these files from showing up again...\n\nOpen gpedit.msc Open `User Configuration > Administratives Templates > Windows Components…","frontmatter":{"title":"Remove Zone:Identifier Files","date":"2022 October 9th","cover":null},"fields":{"slug":"/blog/2022/2022-10-09-WSL-Zone-Identifiers/"}},{"id":"f0f12579-b0f3-599a-84c3-ec789ebc0354","excerpt":"As we transition into the professional world, we are faced with many questions. How much do we save for retirement? Would you like to split your check? Are you successful? To answer these questions, we need a vision so we may set goals to measure…","frontmatter":{"title":"Working for The Future","date":"2022 October 9th","cover":null},"fields":{"slug":"/blog/2022/2022-10-09-working-for-the-future/"}},{"id":"5fc45d4a-17b8-5921-97e8-6e213c64199e","excerpt":"iOS & Web Development | September 2022 - December 2022 Overview\n\nFind the best restaurants near you! This iOS app and website fetches business data from Yelp, autodetects location using an IPInfo API, and provides address search via Google's geocoding…","frontmatter":{"title":"Yelp Shops","date":"2022 September 1st","cover":null},"fields":{"slug":"/projects/2022-09-yelp/"}},{"id":"771f5d36-0932-50c5-bb64-8f54cffbd6c2","excerpt":"Software Development Engineer | August 2022 - April 2024 Key Contributions\nBuilt React application to onboard many datasets at once, reducing registration time by 10x Generated Java-based API from Smithy specification, which included data validation…","frontmatter":{"title":"Amazon.com Data Catalog","date":"2022 August 1st","cover":null},"fields":{"slug":"/projects/2022-08-datacatalog/"}},{"id":"b96c950a-3ec3-5a8f-9df3-53e88af07677","excerpt":"Amazon Web Services Internship | May 2020 - August 2020 Key Achievements\nArchitected a React web application to enable remote work by reducing end-user's procurement time by 85% Satisfied customer requests for highly available RESTful services after…","frontmatter":{"title":"WorkSpace Self-Service Portal","date":"2020 May 1st","cover":null},"fields":{"slug":"/projects/2020-05-workspaces/"}},{"id":"1c552049-8af6-5fd5-b525-d7b5622f3282","excerpt":"Web Development | January 2020 - Present Overview\n\nThis portfolio's focus is freelance work and project exposure. Compared to previous portfolios, this application is a single page with a focus on easily updating and adding content.\n\nDevelopment…","frontmatter":{"title":"Portfolio Website","date":"2020 January 1st","cover":null},"fields":{"slug":"/projects/2020-01-portfolio/"}},{"id":"5f57f315-3719-5315-99a6-b29af763ddb8","excerpt":"IoT Development | August 2019 - December 2019 Overview\n\nThe programming hat is a motorized propeller hat triggered by Github contributions. As a team of three students, we built the hat to study the effect of positive reinforcement on Github…","frontmatter":{"title":"Programming Hat","date":"2019 August 1st","cover":null},"fields":{"slug":"/projects/2019-08-hat/"}},{"id":"80d822ca-830e-5bff-a9b3-7b03a71e654d","excerpt":"Oracle Scholars Internship | June 2019 - August 2019 Overview\n\nMy team showcased the power of Oracle Cloud to a fintech bank's CEO for our summer 2019 internship at Oracle in Reston, VA.\n\nProduct Features\n\nOur product presented the CEO with insights for…","frontmatter":{"title":"Live Sentiment Analysis","date":"2019 June 1st","cover":null},"fields":{"slug":"/projects/2019-06-oracle/"}},{"id":"2bc1f633-6851-5c2d-81c4-124fa1d414d0","excerpt":"Web Development | December 2018 - January 2019 Overview\n\nThis portfolio website serves as an interactive experience for viewing projects. My favorite challenges for this project were designing the page in Photoshop, exporting the images for responsive…","frontmatter":{"title":"Innovative UI/UX Portfolio","date":"2018 December 1st","cover":null},"fields":{"slug":"/projects/2018-12-uxportfolio/"}},{"id":"a9d7b5a4-6255-5d86-bb5f-15c844f9215c","excerpt":"Blockchain Development | September 2018 - September 2020 Overview\n\nFor the 2018 WyoHackathon, I wanted to extend EtherRadio. Motivated to recognize musicians for their work and spearhead SingularDTV's (now Breaker) challenge, I won myself and a friend…","frontmatter":{"title":"Music Billboard","date":"2018 September 1st","cover":null},"fields":{"slug":"/projects/2018-09-billboard/"}},{"id":"d10f0d12-ca1d-586f-8af4-ce3a019062e2","excerpt":"Curriculum Development | May 2018 - July 2018 Overview\n\nIn May of 2017 I was hired to be a student instructor for the Northrop Grumman STEM Camp. To teach high school students with no programming experience, I developed a curriculum and hosted it as a…","frontmatter":{"title":"Python Curriculum & Blog","date":"2018 May 1st","cover":null},"fields":{"slug":"/projects/2018-05-whatspython/"}}]}}}