{"data":{"allMdx":{"nodes":[{"id":"41e9f79e-675f-5e9b-8027-50b68ebf863a","excerpt":"I completed the LeetCode 150! Since then, I haven't stopped practicing. I want to master common algorithms and feel confident for future interviews.\n\nFor this problem, I started with this greedy solution. We always flip a zero if\r we haven't done so…","frontmatter":{"title":"LeetCode 1004. Max Consecutive Ones III","date":"2025 February 13th","cover":null},"fields":{"slug":"/2025/2025-2-15-leetcode-1004/"}},{"id":"e6783bf0-d8e9-57a3-8ba9-8d08e8892233","excerpt":"Today I start working on multidimensional DP. I expect these problems to require a dynamicly-sized array to build a solution, rather than a static number of variables.\r I chose to write about this problem because it is a great example\r of how we can…","frontmatter":{"title":"LeetCode 120. Triangle","date":"2025 January 21st","cover":null},"fields":{"slug":"/2025/2025-1-21-leetcode-120/"}},{"id":"458b0617-7859-5841-905a-2b528120ccd7","excerpt":"We're working through binary search problems. This one has an initial solution with many lines duplicated.\r We further work the solution to use a function and a boolean variable to make the code more clean via the DRY principle.\n\nclass Solution:…","frontmatter":{"title":"LeetCode 34. Find First and Last Position of Element in Sorted Array","date":"2025 January 7th","cover":null},"fields":{"slug":"/2025/2025-1-7-leetcode-34/"}},{"id":"fcb70a66-7a87-57ef-b611-812661bf093a","excerpt":"Today I worked on a general graph problem. My initial solution was much more verbose and less readable than another coder's solution. However, I feel like during an interview I would have been able to derive\r the simpler solution through asking…","frontmatter":{"title":"LeetCode 207. Course Schedule","date":"2024 December 28th","cover":null},"fields":{"slug":"/2024/2024-12-28-leetcode-207/"}},{"id":"db2741ce-a90a-5d9a-9d46-54d1d86ca1c4","excerpt":"Here's another backtracking problem. For this post, I'd like to discuss the differences between my solution and another submitted solution.\n\nclass Solution:\r\n    def generateParenthesis(self, n: int) -> List[str]:\r\n        results = []\r\n        def…","frontmatter":{"title":"LeetCode 22. Generate Parentheses","date":"2024 December 25th","cover":null},"fields":{"slug":"/2024/2024-12-25-leetcode-22/"}},{"id":"e8cb80c4-3c3a-5884-98cc-02c70436c1dd","excerpt":"I've been working on backtracking problems. For this one, it helped to visualize the recursion stack using Python Tutor.\r Also, I will have to revisit this later as the complexity analysis is out-of-the-ordinary.\n\nclass Solution:\r\n    def combine…","frontmatter":{"title":"LeetCode 77. Combinations","date":"2024 December 21st","cover":null},"fields":{"slug":"/2024/2024-12-21-leetcode-77/"}},{"id":"b5f09d02-c53d-53dc-af55-9d0038230fd5","excerpt":"This problem stumped me for a while because I needed to use a dictionary to make sure I didn't have duplicate copies, then I also forgot to return the copy at the end of the DFS algorithm. \"\"\"\r\n# Definition for a Node.\r\nclass Node:\r\n    def __init__…","frontmatter":{"title":"LeetCode 133. Clone Graph","date":"2024 December 18th","cover":null},"fields":{"slug":"/2024/2024-12-18-leetcode-133/"}},{"id":"cf6de498-a785-50ff-b5e4-11a3f0931aed","excerpt":"Here are two solutions. One is recursive and the other iterative. The iterative solution is better as it can handle larger inputs.\n\nRecursive\n\nfrom collections import deque\r\n# Definition for a binary tree node.\r\n# class TreeNode:\r\n#     def __init…","frontmatter":{"title":"LeetCode 173. Binary Search Tree Iterator","date":"2024 December 14th","cover":null},"fields":{"slug":"/2024/2024-12-14-leetcode-173/"}},{"id":"b6288b9a-917a-5f50-910c-8b462015f2fa","excerpt":"I am glad I was able to make a solution from my own intuition. from collections import deque\r\n# Definition for a binary tree node.\r\n# class TreeNode:\r\n#     def __init__(self, val=0, left=None, right=None):\r\n#         self.val = val\r\n#         self…","frontmatter":{"title":"LeetCode 103. Binary Tree Zigzag Level Order Traversal","date":"2024 December 12th","cover":null},"fields":{"slug":"/2024/2024-12-12-leetcode-103/"}},{"id":"d8d476d4-4413-5eb6-820e-3bc49b42c1ed","excerpt":"This is the last month of my goal toward 150 problems done by 2025. I'll have to pick up more than a few problems this weekend. I have 56 problems remaining. from collections import deque\r\n\r\n# Definition for a binary tree node.\r\n# class TreeNode:\r\n#…","frontmatter":{"title":"LeetCode 236. Lowest Common Ancestor of a Binary Tree","date":"2024 December 5th","cover":null},"fields":{"slug":"/2024/2024-12-05-leetcode-236/"}},{"id":"afb79e1e-f2a2-5591-9a67-9e826b37cba4","excerpt":"Happy Thanksgiving! I am happy to have solved this without looking up a solution. However, I did have to review traversals. from collections import deque\r\n\r\n# Definition for a binary tree node.\r\n# class TreeNode:\r\n#     def __init__(self, val=0…","frontmatter":{"title":"LeetCode 105. Construct Binary Tree from Preoder and Inorder Traversal","date":"2024 November 28th","cover":null},"fields":{"slug":"/2024/2024-11-28-leetcode-105/"}},{"id":"32279a60-3d65-5b85-96ce-457442ec5af0","excerpt":"This took me a few days although it's only a medium! It is important to remember Python is pass-by-reference. I spent a lot of time debugging because I didn't mirror changes between previous and next nodes when moving a node between them.\r I was…","frontmatter":{"title":"LeetCode 146. LRU Cache","date":"2024 November 26th","cover":null},"fields":{"slug":"/2024/2024-11-26-leetcode-146/"}},{"id":"403f740f-8ffa-537b-8e73-f2ebacae66a9","excerpt":"I had to read the comments to understand this problem. I didn't understand how they wanted the ordering until I read a few examples. # Definition for singly-linked list.\r\n# class ListNode:\r\n#     def __init__(self, val=0, next=None):\r\n#         self…","frontmatter":{"title":"LeetCode 86. Partition List","date":"2024 November 23rd","cover":null},"fields":{"slug":"/2024/2024-11-23-leetcode-86/"}},{"id":"cf1ada75-ab1e-531f-9d14-463bda605fca","excerpt":"The trick for this one was tracking duplicates via the unique boolean and a pending variable. # Definition for singly-linked list.\r\n# class ListNode:\r\n#     def __init__(self, val=0, next=None):\r\n#         self.val = val\r\n#         self.next = next…","frontmatter":{"title":"LeetCode 82. Remove Duplicates from Sorted List II","date":"2024 November 21st","cover":null},"fields":{"slug":"/2024/2024-11-21-leetcode-82/"}},{"id":"7a6839e1-1e67-5f2a-a4f0-9575bc837a86","excerpt":"Today I chose an easy problem since I had a late day at work and gym afterwards. from collections import deque\r\n\r\n# Definition for a binary tree node.\r\n# class TreeNode:\r\n#     def __init__(self, val=0, left=None, right=None):\r\n#         self.val…","frontmatter":{"title":"LeetCode 100. Same Tree","date":"2024 November 20th","cover":null},"fields":{"slug":"/2024/2024-11-20-leetcode-100/"}},{"id":"bec872ff-a2bb-5a40-b085-e12441f332d9","excerpt":"I had difficulties with this problem with terminating completed lists. I was surprised that ChatGPT didn't give this simple solution, it suggested a large rework. I'll have to be mindful before implementing all of ChatGPT's suggestions.\n\n# Definitio…","frontmatter":{"title":"LeetCode 25. Reverse Nodes in k-Group","date":"2024 November 19th","cover":null},"fields":{"slug":"/2024/2024-11-19-leetcode-25/"}},{"id":"8d702f63-89e6-58f6-9d18-a21e93a7d422","excerpt":"I was able to reduce this time complexity from O(n) = 2n to O(n) = n by using a list for the elements to be reversed, and then only modifying those rather than stepping through all nodes while reversing. # Definition for singly-linked list…","frontmatter":{"title":"LeetCode 92. Reverse Linked List II","date":"2024 November 18th","cover":null},"fields":{"slug":"/2024/2024-11-18-leetcode-92/"}},{"id":"7a35a546-7370-51c9-9fe5-ece8e8ff2308","excerpt":"This problem was tricky as I had to track Node references rather than the index given in the input. from collections import defaultdict\r\n\"\"\"\r\n# Definition for a Node.\r\nclass Node:\r\n    def __init__(self, x: int, next: 'Node' = None, random: 'Node' =…","frontmatter":{"title":"LeetCode 138. Copy List with Random Pointer","date":"2024 November 15th","cover":null},"fields":{"slug":"/2024/2024-11-15-leetcode-138/"}},{"id":"057154a1-8249-5286-a4f1-d1f23a2d3beb","excerpt":"Final stack problem for this practice set is a hard question. Took me an hour and a half to come up with this convoluted method. Parsing numbers character by character was my first mistake.\n\nclass Solution:\r\n    def calculate(self, s: str) -> int:…","frontmatter":{"title":"LeetCode 224. Basic Calculator","date":"2024 November 14th","cover":null},"fields":{"slug":"/2024/2024-11-14-leetcode-224/"}},{"id":"2a1ee24e-0c55-59bd-9acc-e226365bf56d","excerpt":"Now I'm on to stacks. I had to rethink my strategy of going from right to left, to left to right. I was overcomplicating it. class Solution:\r\n    def evalRPN(self, tokens: List[str]) -> int:\r\n        stack = []\r\n        for token in tokens:…","frontmatter":{"title":"LeetCode 150. Evaluate Reverse Polish Notation","date":"2024 November 13th","cover":null},"fields":{"slug":"/2024/2024-11-13-leetcode-150/"}},{"id":"0a564c63-88c4-531b-b1b4-df756090a129","excerpt":"This took me a long time to cover all cases. class Solution:\r\n    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:\r\n        start, end = newInterval\r\n        inserted = False\r\n        res = []\r\n        for…","frontmatter":{"title":"LeetCode 57. Insert Interval","date":"2024 November 12th","cover":null},"fields":{"slug":"/2024/2024-11-12-leetcode-57/"}},{"id":"8a1dd22a-34f4-5a51-8eaa-ead6e54bfa60","excerpt":"Now I'm onto intervals. This one merges all intersecting intervals and returns the distinct items. class Solution:\r\n    def merge(self, intervals: List[List[int]]) -> List[List[int]]:\r\n        res = []\r\n        intervals = sorted(intervals)…","frontmatter":{"title":"LeetCode 56. Merge Intervals","date":"2024 November 11th","cover":null},"fields":{"slug":"/2024/2024-11-11-leetcode-56/"}},{"id":"1f659a14-989e-52ff-b4cb-1f69e8ebe1e9","excerpt":"Working on hashmap problems now. from collections import defaultdict\nclass Solution:\n    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:\n        indexToSortedWord = defaultdict(list)\n        for i, word in enumerate(strs…","frontmatter":{"title":"LeetCode 49. Group Anagrams","date":"2024 November 9th","cover":null},"fields":{"slug":"/2024/2024-11-09-leetcode-49/"}},{"id":"d4276ba8-753b-5506-9e24-2186df182184","excerpt":"Final matrix problem, this one a bit special to me. My first repo in Github is for a Game of Life program in C++. I created it in 2011 as a science fair project. This method uses constant space by usind integer division and modulo operations. We use…","frontmatter":{"title":"LeetCode 289. Game of Life","date":"2024 November 6th","cover":null},"fields":{"slug":"/2024/2024-11-06-leetcode-289/"}},{"id":"ba0f43ad-2c46-57fa-bd14-70878ade5b1e","excerpt":"Working through more matrix problems today. I used a method where we transpose the matrix, then reverse the rows. This is memory efficient in space and locality.\n\nclass Solution:\n    def rotate(self, matrix: List[List[int]]) -> None:\n        \"\"\"…","frontmatter":{"title":"LeetCode 48. Rotate Image","date":"2024 November 5th","cover":null},"fields":{"slug":"/2024/2024-11-05-leetcode-48/"}},{"id":"52950365-7481-57d2-9cf8-25eedc156e13","excerpt":"Now, I am working on matrix problems. This is my initial greedy solution.\n\nclass Solution:\n    def isValidSudoku(self, board: List[List[str]]) -> bool:\n        for row in board:\n            rowVals = set()\n            for column in row:…","frontmatter":{"title":"LeetCode 36. Valid Sudoku","date":"2024 November 4th","cover":null},"fields":{"slug":"/2024/2024-11-04-leetcode-36/"}},{"id":"dcb990c6-d29b-5720-9adb-3b1b893f157a","excerpt":"Last problem for this study set's sliding window problems. This is my initial greedy solution. It passes initial test cases, but fails longer inputs.\n\nclass Solution:\n    def minWindow(self, s: str, t: str) -> str:\n        def containsT(substring):…","frontmatter":{"title":"LeetCode 76. Minimum Window Substring","date":"2024 November 3rd","cover":null},"fields":{"slug":"/2024/2024-11-03-leetcode-76/"}},{"id":"84410dbf-ad8c-5787-8bde-76e6b951d5dd","excerpt":"Starting with a hard problem today. class Solution:\n    def findSubstring(self, s: str, words: List[str]) -> List[int]:\n        lenTotal = len(''.join(words))\n        perms = set()\n        def permutations(head, tail):\n            if not len(head):…","frontmatter":{"title":"LeetCode 30. Substring with Concatenation of All Words","date":"2024 November 2nd","cover":null},"fields":{"slug":"/2024/2024-11-02-leetcode-30/"}},{"id":"f7062058-324f-563f-9549-921664f1e061","excerpt":"This took a while to solve. I completed it over two days, then I had the help of ChatGPT to analyze the complexity. I reviewed other answers and I didn't find simpler methods. class Solution:\n    def fullJustify(self, words: List[str], maxWidth: int…","frontmatter":{"title":"LeetCode 68. Text Justification","date":"2024 November 1st","cover":null},"fields":{"slug":"/2024/2024-11-01-leetcode-68/"}},{"id":"b57bfa1e-517a-5a62-b441-d13663b48b87","excerpt":"This was an easy problem. class Solution:\n    def strStr(self, haystack: str, needle: str) -> int:\n        for j in range(len(haystack)):\n            if haystack[j:j + len(needle)] == needle:\n                return j\n        return -1\n\n\nO(n) = n","frontmatter":{"title":"LeetCode 28. Find the Index of the First Occurrence in a String","date":"2024 October 31st","cover":null},"fields":{"slug":"/2024/2024-10-31-leetcode-28/"}},{"id":"9a08eb20-bf66-5f7e-9dad-1626cc5f7296","excerpt":"This one took me about 15 minutes to come up with a solution. I then worked through it with this naive solution. class Solution:\n    def convert(self, s: str, numRows: int) -> str:\n        grid = [['' for column in range(len(s))] for row in range…","frontmatter":{"title":"LeetCode 6. Zigzag Conversion","date":"2024 October 30th","cover":null},"fields":{"slug":"/2024/2024-10-30-leetcode-6/"}},{"id":"90736178-7b2f-53da-966c-cf42987078a1","excerpt":"I started feeling down about my past interview performance. Rather than continue ruminating, I decided to continue my LeetCode grind tonight. My goal is to complete the Top 150 Interview Questions before the end of the year. class Solution:\n    def…","frontmatter":{"title":"LeetCode 12. Integer to Roman","date":"2024 October 28th","cover":null},"fields":{"slug":"/2024/2024-10-28-leetcode-12/"}},{"id":"4ba5b859-bdd4-59ae-a2d7-34de715436ce","excerpt":"Finished a couple easy problems, then this medium problem. I feel like this was made easier by python's list slicing. class Solution:\n    def reverseWords(self, s: str) -> str:\n        return ' '.join(s.split()[::-1])\n\n\nO(n) = n","frontmatter":{"title":"LeetCode 12. Integer to Roman","date":"2024 October 28th","cover":null},"fields":{"slug":"/2024/2024-10-29-leetcode-151/"}},{"id":"1a8099a8-d1ad-5028-9a48-d2d88a5f0d21","excerpt":"Getting back into the habit of solving LeetCode problems. Today's problem is LeetCode 74. Search a 2D Matrix.\n\nWe have to solve this in O(log(m*n)) time complexity. So, I think of binary search in 2 dimensions. Once for the row, and once for the…","frontmatter":{"title":"LeetCode 74. Search a 2D Matrix","date":"2024 October 22nd","cover":null},"fields":{"slug":"/2024/2024-10-22-leetcode-74/"}},{"id":"3bc6b5e2-c86c-5d70-9c14-24775b4aee80","excerpt":"The intial phone screen for the StubHub interview went well. I was asked about my experience with Terraform. I admitted that I have only used it once before. and it has been many years since then. However, I used AWS CDK frequently at my last job…","frontmatter":{"title":"Learning Terraform","date":"2024 October 15th","cover":null},"fields":{"slug":"/2024/2024-10-15-learning-terraform/"}},{"id":"98a1d631-4c66-54e2-8498-16558449faee","excerpt":"I'm looking forward to an interview for a software engineer position at StubHub. It offers work with microservices, kubernetes, and cloud-native technologies.\r The position focuses on DevOps, such as infrastructure, build, deployment, and artifact…","frontmatter":{"title":"Email Processing System Design","date":"2024 October 13th","cover":null},"fields":{"slug":"/2024/2024-10-13-email-processing-design/"}},{"id":"f44df265-72e0-5b43-9428-0e54c0d0270f","excerpt":"I've began a new project, scholarships-plus. This will be a CRUD app for tracking and improving scholarship essays. I am creating this app to improve student's scholarship essays by improving their past submissions.\r This app will allow students to…","frontmatter":{"title":"Scholarships Plus","date":"2024 October 8th","cover":null},"fields":{"slug":"/2024/2024-10-08-scholarships-plus/"}},{"id":"cb75c317-7577-5c4c-a55d-fdcd9a97006f","excerpt":"Today I decided to embrace the AI revolution and try out Cursor. I'm going to write a quick LeetCode solution, then dive into some project ideas. The Problem\n\nSince we have some help from Cursor tonight, we wil be solving a hard problem.\r Today's…","frontmatter":{"title":"Intro to Cursor","date":"2024 October 7th","cover":null},"fields":{"slug":"/2024/2024-10-07-intro-to-cursor/"}},{"id":"120a42e5-ac78-5481-86cc-d120357047d3","excerpt":"We're solving another LeetCode problem today. Tomorrow I will add my new project. Let's dive in. The Problem\n\nToday's problem is 9. Palindrome Number. The problem is as follows:\r Given an integer x, return true if x is a palindrome, and false…","frontmatter":{"title":"Another LeetCode Blog Post","date":"2024 October 6th","cover":null},"fields":{"slug":"/2024/2024-10-06-another-leetcode/"}},{"id":"69d975e3-1424-5fea-b185-69af2cc24083","excerpt":"We're solving another LeetCode problem today instead of adding a new project to my portfolio. This one is focused on bit manipulation. Let's dive in. The Problem\n\nToday's problem is 191. Number of 1 bits. The problem is as follows:\r Write a function…","frontmatter":{"title":"LeetCode as Procrastination","date":"2024 October 5th","cover":null},"fields":{"slug":"/2024/2024-10-05-leetcode-procrastination/"}},{"id":"0f89bcfb-5ab8-5327-9233-c99a9f1669f0","excerpt":"Today is another easy problem, and it is focused on bit manipulation. Let's dive on in.\n\nThe Problem\n\nToday's problem is 190. Reverse Bits. The problem is as follows:\r Reverse bits of a given 32 bits unsigned integer.\n\nThe Solution\n\nI like to format my…","frontmatter":{"title":"Second LeetCode Blog Post","date":"2024 October 4th","cover":null},"fields":{"slug":"/2024/2024-10-04-second-leetcode/"}},{"id":"4985423e-afa0-5002-97b6-8080faf9206f","excerpt":"I have already been working on LeetCode's top interview problems. I started a couple months ago in preparation for my interviews with Google. Although that has passed, more opportunities are becoming available.\r So, we are back on the grind.\n\nThe…","frontmatter":{"title":"My First LeetCode Blog Post","date":"2024 October 3rd","cover":null},"fields":{"slug":"/2024/2024-10-03-first-leetcode/"}},{"id":"628229ff-111f-5c67-90bc-3893344e99dc","excerpt":"More code! Mind Dump!\r Using prism-react-renderer:\n\nlet intro = []\r\n\r\nlet stanza1 = [\r\n    \"Home is where the wind fills our sails.\",\r\n    \"Although many don't sail away from here.\",\r\n    \"With a lake much like the sea\",\r\n    \"Sailing what we've…","frontmatter":{"title":"Moon Pie","date":"2021 August 17th","cover":{"publicURL":"/static/f92fb71b65672630d0f394c4dde89e43/moonpie.jpg","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f92fb71b65672630d0f394c4dde89e43/f24bb/moonpie.jpg","srcSet":"/static/f92fb71b65672630d0f394c4dde89e43/e12b3/moonpie.jpg 500w,\n/static/f92fb71b65672630d0f394c4dde89e43/fd6e8/moonpie.jpg 1000w,\n/static/f92fb71b65672630d0f394c4dde89e43/f24bb/moonpie.jpg 2000w","sizes":"(min-width: 2000px) 2000px, 100vw"},"sources":[{"srcSet":"/static/f92fb71b65672630d0f394c4dde89e43/491aa/moonpie.webp 500w,\n/static/f92fb71b65672630d0f394c4dde89e43/e4756/moonpie.webp 1000w,\n/static/f92fb71b65672630d0f394c4dde89e43/32d6e/moonpie.webp 2000w","type":"image/webp","sizes":"(min-width: 2000px) 2000px, 100vw"}]},"width":2000,"height":774}}}},"fields":{"slug":"/2021/2021-08-17-moon-pie/"}},{"id":"bfbad7ce-993e-5e26-8e89-df4cfb4edcb7","excerpt":"Yes! Some code! Here is the Dump component!\r Using prism-react-renderer:\n\nconst Dump = props => (\r\n  <div\r\n    style={{\r\n      fontSize: 20,\r\n      border: '1px solid #efefef',\r\n      padding: 10,\r\n      background: 'white',\r\n    }}\r\n  >\r\n    {Object…","frontmatter":{"title":"Code Blocks","date":"2021 August 15th","cover":{"publicURL":"/static/2f0f57ee5d5a2c7a5410e5755ea6aec2/cover.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8b808","images":{"fallback":{"src":"/static/2f0f57ee5d5a2c7a5410e5755ea6aec2/5e1a5/cover.png","srcSet":"/static/2f0f57ee5d5a2c7a5410e5755ea6aec2/5abde/cover.png 345w,\n/static/2f0f57ee5d5a2c7a5410e5755ea6aec2/3e25c/cover.png 691w,\n/static/2f0f57ee5d5a2c7a5410e5755ea6aec2/5e1a5/cover.png 1381w","sizes":"(min-width: 1381px) 1381px, 100vw"},"sources":[{"srcSet":"/static/2f0f57ee5d5a2c7a5410e5755ea6aec2/9b32e/cover.webp 345w,\n/static/2f0f57ee5d5a2c7a5410e5755ea6aec2/c8535/cover.webp 691w,\n/static/2f0f57ee5d5a2c7a5410e5755ea6aec2/36bff/cover.webp 1381w","type":"image/webp","sizes":"(min-width: 1381px) 1381px, 100vw"}]},"width":2000,"height":696.5966690803766}}}},"fields":{"slug":"/2021/2021-08-15-code-blocks/"}},{"id":"cac3ad23-4dcc-5a2a-a13a-357506837383","excerpt":"This is my third post! with a block quote!","frontmatter":{"title":"Third Post!","date":"2021 August 3rd","cover":null},"fields":{"slug":"/2021/2021-08-03-third-post/"}},{"id":"f15eb1c8-3d0e-5466-93cd-110b7c055687","excerpt":"This is my second post! h4 Heading\nh5 Heading\nh6 Heading","frontmatter":{"title":"Second Post!","date":"2021 August 2nd","cover":null},"fields":{"slug":"/2021/2021-08-02-second-post/"}},{"id":"b31e2dd3-c2b1-5965-9610-d2eabee7c478","excerpt":"My first post!! h2 Heading\nh3 Heading","frontmatter":{"title":"Hello World - from mdx!","date":"2021 August 1st","cover":null},"fields":{"slug":"/2021/2021-08-01-hello-world/"}}]}}}