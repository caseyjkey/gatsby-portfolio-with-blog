{"componentChunkName":"component---src-templates-blog-post-template-tsx-content-file-path-posts-projects-2024-04-farmx-index-mdx","path":"/projects/2024-04-farmx/","result":{"data":{"mdx":{"frontmatter":{"title":"Oracle Release Management"}}},"pageContext":{"slug":"/projects/2024-04-farmx/","previous":{"fields":{"slug":"/blog/2022/2022-10-09-WSL-Zone-Identifiers/"},"frontmatter":{"title":"Remove Zone:Identifier Files","date":"October 9, 2022"},"body":"\r\nTo remove the Zone:Identifier files, execute:\r\n```python\r\nfind . -name \"*:Zone.Identifier\" -type f -delete\r\n```\r\n\r\nThen to prevent these files from showing up again...\r\n\r\n1. Open gpedit.msc\r\n2. Open `User Configuration > Administratives Templates > Windows Components > Attachment Manager\r\n3. Double-click on \"Do not preserve zone information in file attachment\" and set it to enabled\r\n4. Press ok","internal":{"contentFilePath":"/home/trill/Development/gatsby-portfolio-with-blog/posts/blog/2022/2022-10-09-WSL-Zone-Identifiers/index.mdx"}},"next":{"fields":{"slug":"/blog/2024/2024-10-03-first-leetcode/"},"frontmatter":{"title":"LeetCode 35. Search Insert Position","date":"October 3, 2024"},"body":"\r\n# My First LeetCode Blog Post\r\nI have already been working on LeetCode's top interview problems. I started a couple months ago\r\nin preparation for my interviews with Google. Although that has passed, more opportunities are becoming available.\r\nSo, we are back on the grind.\r\n## The Problem\r\nToday we are working on **35. Search Insert Position**. The problem is as follows:\r\nGiven a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.\r\n\r\nYou must write an algorithm with O(log n) runtime complexity.\r\n\r\nExample 1:\r\n* Input: nums = [1,3,5,6], target = 5\r\n* Output: 2\r\n\r\nExample 2:\r\n* Input: nums = [1,3,5,6], target = 2\r\n* Output: 1\r\n\r\nExample 3:\r\n* Input: nums = [1,3,5,6], target = 7\r\n* Output: 4\r\n\r\n## The Solution\r\nI like to format my answers using the UMPIRE method:\r\n* Understand\r\n    * We are given a sorted array, and we are searching for an expected value.\r\n* Match\r\n    * We can match this problem to a binary search problem, given the O(log N) complexity.\r\n* Plan\r\n    * We will want a function that takes in an array and returns an integer.\r\n* Implement\r\n``` python\r\n    def searchInsert(self, nums: List[int], target: int) -> int:\r\n        left = 0\r\n        right = len(nums) - 1\r\n        while left <= right:\r\n            mid = left + (right - left) // 2\r\n            if nums[mid] == target:\r\n                return mid\r\n            elif nums[mid] < target:\r\n                left = mid + 1\r\n            else:\r\n                right = mid - 1\r\n        \r\n        return mid\r\n```\r\n* Review\r\n    * The code is clean and concise. We used descriptive variable names. We have implemented a binary search.\r\n    * We can test our code using the examples provided.\r\n    * nums = [1,3,5,6], target = 5\r\n        * left = 0, right = 3, mid = 1\r\n        * nums[1] = 3 < 5, left = 2\r\n        * nums[2] = 5 == 5, return 2\r\n    * Now let's test an edge case where the element is not in the array.\r\n    * nums = [1,3,5,6], target = 2\r\n        * left = 0, right = 3, mid = 1\r\n        * nums[1] = 3 > 2, right = 0\r\n        * nums[0] = 1 < 2, left = 1\r\n        * return 0\r\n    * We see we are not getting the expected output. We need to rework to support this edge case.\r\n* Evaluate\r\n    * We are getting the expected runtime complexity. We are not getting expected result for missing elements.\r\n    * Refactor\r\n    * We need to return the `left` pointer, not the `mid` pointer.\r\n","internal":{"contentFilePath":"/home/trill/Development/gatsby-portfolio-with-blog/posts/blog/2024/2024-10-03-first-leetcode/index.mdx"}},"post":{"fields":{"slug":"/projects/2024-04-farmx/"},"frontmatter":{"title":"Oracle Release Management","date":"April 1, 2024"},"body":"\n**Applications Developer 2** | April 2024 - September 2025\n\n## Key Achievements\n\n- Built and launched a scalable release management tool supporting 13,780 users with high reliability\n- Mentored new developers, facilitating knowledge transfer and collaborative problem-solving\n- Led onboarding and support for users, resolving bugs, gathering feedback, and refining key features\n- Efficiently ingested data sources with Python, DRF, and Celery for asynchronous data processing\n\n## Technologies Used\n\n- Git & GitLab\n- Python\n- JavaScript\n- Django & Django REST Framework\n- Oracle Database\n- Celery\n\n## Impact\n\nThis release management tool has become a critical piece of infrastructure, supporting thousands of users and streamlining the release process across the organization.\n","internal":{"contentFilePath":"/home/trill/Development/gatsby-portfolio-with-blog/posts/projects/2024-04-farmx/index.mdx"}},"frontmatter":{"title":"Oracle Release Management","date":"2024-04-01T00:00:00.000Z","published":true}}},"staticQueryHashes":[],"slicesMap":{}}