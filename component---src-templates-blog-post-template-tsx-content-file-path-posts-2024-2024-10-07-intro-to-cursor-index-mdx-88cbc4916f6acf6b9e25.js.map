{"version":3,"file":"component---src-templates-blog-post-template-tsx-content-file-path-posts-2024-2024-10-07-intro-to-cursor-index-mdx-88cbc4916f6acf6b9e25.js","mappings":"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","sources":["webpack://portfolio-app/./posts/2024/2024-10-07-intro-to-cursor/index.mdx","webpack://portfolio-app/./src/templates/blogPostTemplate.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    h2: \"h2\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Today I decided to embrace the AI revolution and try out Cursor. I'm going to write a quick LeetCode solution, then dive into some project ideas.\"), \"\\n\", React.createElement(_components.h1, null, \"LeetCode Problem\"), \"\\n\", React.createElement(_components.h2, null, \"The Problem\"), \"\\n\", React.createElement(_components.p, null, \"Since we have some help from Cursor tonight, we wil be solving a hard problem.\\r\\nToday's problem is \", React.createElement(_components.strong, null, \"4. Median of Two Sorted Arrays\"), \". The problem is as follows:\"), \"\\n\", React.createElement(_components.p, null, \"Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.\"), \"\\n\", React.createElement(_components.p, null, \"The overall run time complexity should be O(log (m+n)).\"), \"\\n\", React.createElement(_components.p, null, \"Example 1:\\r\\nInput: nums1 = [1,3], nums2 = [2]\\r\\nOutput: 2.00000\\r\\nExplanation: merged array = [1,2,3] and median is 2.\"), \"\\n\", React.createElement(_components.p, null, \"Example 2:\\r\\nInput: nums1 = [1,2], nums2 = [3,4]\\r\\nOutput: 2.50000\\r\\nExplanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.\"), \"\\n\", React.createElement(_components.h2, null, \"The Solution\"), \"\\n\", React.createElement(_components.p, null, \"Let's answer using the UMPIRE method:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Understand\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"We have two sorted arrays, and we must merge them and find the median.\"), \"\\n\", React.createElement(_components.li, null, \"The median is the middle value of a sorted list. If the list has an even number of elements, the median is the average of the two middle elements.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Match\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"We can merge the two arrays and then find the median, but this would not be O(log(m+n)).\"), \"\\n\", React.createElement(_components.li, null, \"We can use a modified binary search to find the median.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Binary search is O(log n) and we can use it to find the median.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Plan\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"We can use a modified binary search to find the median.\"), \"\\n\", React.createElement(_components.li, null, \"We will use two pointers to traverse the arrays.\"), \"\\n\", React.createElement(_components.li, null, \"We will use a helper function to find the median of the two arrays.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Implement\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"class Solution:\\r\\n    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:\\r\\n        # Ensure nums1 is the smaller array\\r\\n        if len(nums1) > len(nums2):\\r\\n            nums1, nums2 = nums2, nums1\\r\\n        \\r\\n        m, n = len(nums1), len(nums2)\\r\\n        total_length = m + n\\r\\n        half = (total_length + 1) // 2\\r\\n        \\r\\n        left, right = 0, m\\r\\n        \\r\\n        while left <= right:\\r\\n            partition1 = (left + right) // 2\\r\\n            partition2 = half - partition1\\r\\n            \\r\\n            left1 = nums1[partition1 - 1] if partition1 > 0 else float('-inf')\\r\\n            right1 = nums1[partition1] if partition1 < m else float('inf')\\r\\n            left2 = nums2[partition2 - 1] if partition2 > 0 else float('-inf')\\r\\n            right2 = nums2[partition2] if partition2 < n else float('inf')\\r\\n            \\r\\n            if left1 <= right2 and left2 <= right1:\\r\\n                # We have found the correct partition\\r\\n                if total_length % 2 == 0:\\r\\n                    return (max(left1, left2) + min(right1, right2)) / 2\\r\\n                else:\\r\\n                    return max(left1, left2)\\r\\n            elif left1 > right2:\\r\\n                right = partition1 - 1\\r\\n            else:\\r\\n                left = partition1 + 1\\r\\n        \\r\\n        raise ValueError(\\\"Input arrays are not sorted\\\")\\r\\n\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Review\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"The code is clean, it uses descriptive variables and follows a logical flow.\"), \"\\n\", React.createElement(_components.li, null, \"The code is correct, it passes the test cases.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Evaluate\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"The code is efficient, it runs in O(log(m+n)) time.\"), \"\\n\", React.createElement(_components.li, null, \"We never iterate over the entire array, even in the worst case.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Notes\"), \"\\n\", React.createElement(_components.p, null, \"Cursor generates duplicate responses. I had to remove unnecessary text.\\r\\nIt does not appear to elaborate on its reasoning.\\r\\nElaborating on specific parts is easy using the annotated keyboard commands.\\r\\nUsing cursor to write LeetCode solutions is great, but it won't be useful for interviews.\\r\\nHopefully it will be as useful for projects.\\r\\nIt would be nice if I could tab through the suggestions, rather than using tab to accept current suggestion.\\r\\nCursor has been a drop-in replacement for Code, requiring no configuration to continue prior development workflow.\"), \"\\n\", React.createElement(_components.h1, null, \"Project Ideas\"), \"\\n\", React.createElement(_components.p, null, \"I had a few ideas for projects I want to build.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"A wallpaper web app that scrapes image boards.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"It would have authentication for user accounts.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Users can favorite wallpapers, saving them for later.\"), \"\\n\", React.createElement(_components.li, null, \"Users can download wallpapers, saving bandwidth compared to anonymous access.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"It would hide NSFW wallpapers by parsing post text.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"A scholarship essay assistant.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"It would use RAG to import past essays as context during prompts.\"), \"\\n\", React.createElement(_components.li, null, \"It would use GPT-4o to proofread and improve essays.\"), \"\\n\", React.createElement(_components.li, null, \"It would track scholarship deadlines.\"), \"\\n\", React.createElement(_components.li, null, \"It would save essays to a user's Google Drive.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"I will use the wallpaper app to learn Next.js and Tailwind.\\r\\nI don't expect to spend much time on it, as it can only be monetized through ads.\\r\\nI will use the scholarship essay assistant to learn about:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"RAG,\"), \"\\n\", React.createElement(_components.li, null, \"GPT-4o,\"), \"\\n\", React.createElement(_components.li, null, \"Google Drive API,\"), \"\\n\", React.createElement(_components.li, null, \"Docker,\"), \"\\n\", React.createElement(_components.li, null, \"AWS,\"), \"\\n\", React.createElement(_components.li, null, \"React,\"), \"\\n\", React.createElement(_components.li, null, \"and TypeScript.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/trill/Development/gatsby-portfolio-with-blog/posts/2024/2024-10-07-intro-to-cursor/index.mdx\";\nimport {Link} from 'gatsby';\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport {Heading} from '../components/style.ts';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {theme, Body} from '../components/style';\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\nexport const BlogPost = styled.div.withConfig({\n  displayName: \"blogPostTemplate__BlogPost\",\n  componentId: \"sc-6bdelx-0\"\n})([\"margin:0 auto;margin-top:6em;max-width:800px;padding:20px;\"]);\nfunction BlogPostTemplate(_ref) {\n  let {data, pageContext, children} = _ref;\n  const {frontmatter} = data.mdx;\n  const {previous, next, post} = pageContext;\n  return React.createElement(Layout, null, React.createElement(ThemeProvider, {\n    theme: theme\n  }, React.createElement(Body, null, React.createElement(Navigation, null), React.createElement(BlogPost, null, React.createElement(Heading, {\n    className: \"text-center\"\n  }, frontmatter.title), React.createElement(\"p\", {\n    className: \"text-center\"\n  }, post.frontmatter.date), children, previous && React.createElement(React.Fragment, null, previous && React.createElement(Link, {\n    to: previous.fields.slug\n  }, React.createElement(\"p\", null, previous.frontmatter.title))), next && React.createElement(React.Fragment, null, next && React.createElement(Link, {\n    to: next.fields.slug\n  }, React.createElement(\"p\", null, next.frontmatter.title)))), React.createElement(Footer, null))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"3188270682\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h1","h2","strong","ul","li","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","BlogPost","styled","div","withConfig","displayName","componentId","BlogPostTemplate","_ref","data","pageContext","children","frontmatter","mdx","previous","next","post","Layout","ThemeProvider","theme","Body","Navigation","Heading","title","date","Link","to","fields","slug","Footer","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}