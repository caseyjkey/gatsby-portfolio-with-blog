{"version":3,"file":"component---src-templates-blog-post-template-jsx-content-file-path-posts-2024-2024-11-26-leetcode-146-index-mdx-c35ea09a8a8566017400.js","mappings":"sNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,KAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,+VAAgW,KAAMM,EAAAA,cAAoBT,EAAYI,GAAI,KAAM,YAAa,KAAMK,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CAC5kBI,UAAW,mBACV,m1EAAo1E,KAAMD,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,oIACx4E,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,KAAsBR,EAAMS,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWb,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oECPO,MAAMc,EAAYC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAVJ,CAAU,gEAMnC,SAASK,EAAgBC,GAAgC,IAA/B,KAACC,EAAI,YAAEC,EAAW,SAAEC,GAASH,EACrD,MAAM,YAACI,GAAeH,EAAKI,KACrB,SAACC,EAAQ,KAAEC,EAAI,KAAEC,GAAQN,EAC/B,OAAOb,EAAAA,cAAoBoB,EAAAA,EAAQ,KAAMpB,EAAAA,cAAoBqB,EAAAA,cAAe,CAC1EC,MAAOA,EAAAA,IACNtB,EAAAA,cAAoBuB,EAAAA,GAAM,KAAMvB,EAAAA,cAAoBwB,EAAAA,GAAaxB,EAAAA,cAAoBI,EAAU,KAAMJ,EAAAA,cAAoByB,EAAAA,GAAS,CACnIxB,UAAW,eACVc,EAAYW,OAAQ1B,EAAAA,cAAoB,IAAK,CAC9CC,UAAW,eACVkB,EAAKJ,YAAYY,MAAOb,EAAUG,GAAYjB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMiB,GAAYjB,EAAAA,cAAoB4B,EAAAA,GAAM,CAC/HC,GAAIZ,EAASa,OAAOC,MACnB/B,EAAAA,cAAoB,IAAK,KAAMiB,EAASF,YAAYW,SAAUR,GAAQlB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMkB,GAAQlB,EAAAA,cAAoB4B,EAAAA,GAAM,CACnJC,GAAIX,EAAKY,OAAOC,MACf/B,EAAAA,cAAoB,IAAK,KAAMkB,EAAKH,YAAYW,UAAW1B,EAAAA,cAAoBgC,EAAAA,KACpF,CACe,SAASC,EAAiB3C,GACvC,OAAOU,EAAAA,cAAoBU,EAAkBpB,EAAOU,EAAAA,cAAoBkC,EAAqB5C,GAC/F,C","sources":["webpack://portfolio-app/./posts/2024/2024-11-26-leetcode-146/index.mdx","webpack://portfolio-app/./src/templates/blogPostTemplate.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This took me a few days although it's only a medium! It is important to remember Python is pass-by-reference.\\r\\nI spent a lot of time debugging because I didn't mirror changes between previous and next nodes when moving a node between them.\\r\\nI was able to debug by creating a list of key-value pairs then printing the list after each operation.\"), \"\\n\", React.createElement(_components.h1, null, \"Solution\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"class Node:\\r\\n    def __init__(self, key=0, val=0, prev=None, next=None):\\r\\n        self.key = key\\r\\n        self.val = val\\r\\n        self.prev = prev\\r\\n        self.next = next\\r\\n\\r\\nclass LRUCache:\\r\\n    def __init__(self, capacity: int):\\r\\n        self.capacity = capacity\\r\\n        self.size = 0\\r\\n        self.d = {}\\r\\n        self.l = None\\r\\n        self.start = None\\r\\n\\r\\n    def get(self, key: int) -> int:\\r\\n        if key in self.d:\\r\\n            node = self.d[key]\\r\\n            if node.prev and node.next:\\r\\n                node.prev.next = node.next\\r\\n                node.next.prev = node.prev\\r\\n            elif node.next:\\r\\n                self.start = node.next\\r\\n                self.start.prev = None\\r\\n            if self.l != node:\\r\\n                node.prev = self.l\\r\\n                self.l.next = node\\r\\n                self.l = self.l.next\\r\\n                self.l.next = None\\r\\n            return node.val\\r\\n        else:\\r\\n            return -1\\r\\n\\r\\n    def put(self, key: int, value: int) -> None:\\r\\n        if not key in self.d:\\r\\n            if self.size == self.capacity:\\r\\n                node = self.start\\r\\n                del self.d[node.key]\\r\\n                self.start = node.next\\r\\n                if self.start:\\r\\n                    self.start.prev = None\\r\\n                self.size -= 1\\r\\n            if self.l:\\r\\n                self.l.next = Node(key, value, self.l)\\r\\n                self.l = self.l.next\\r\\n            if not self.start:\\r\\n                self.start = Node(key, value)\\r\\n                self.l = self.start\\r\\n            self.d[key] = self.l\\r\\n            self.size += 1\\r\\n        else:\\r\\n            node = self.d[key]\\r\\n            if node == self.start and self.start.next:\\r\\n                self.start = self.start.next\\r\\n                self.start.prev = None\\r\\n            if node.prev and node.next:\\r\\n                node.prev.next = node.next\\r\\n                node.next.prev = node.prev\\r\\n            if node != self.l:\\r\\n                node.prev = self.l\\r\\n                self.l.next = node\\r\\n            node.val = value\\r\\n            node.next = None\\r\\n            self.l = node\\r\\n\\r\\n\\r\\n\\r\\n# Your LRUCache object will be instantiated and called as such:\\r\\n# obj = LRUCache(capacity)\\r\\n# param_1 = obj.get(key)\\r\\n# obj.put(key,value)\\n\")), \"\\n\", React.createElement(_components.p, null, \"Time complexity for get and put operations are O(n) = 1 and space complexity is O(n) due to the dictionary holding each element.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/trill/Development/gatsby-portfolio-with-blog/posts/2024/2024-11-26-leetcode-146/index.mdx\";\nimport {graphql, Link} from 'gatsby';\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport {Heading} from '../components/style.js';\nimport Dump from '../components/Dump';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {theme, Body} from '../components/style';\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\nexport const BlogPost = (styled.div)`\n    margin: 0 auto;\n    margin-top: 6em;\n    max-width: 800px;\n    padding: 20px;\n`;\nfunction BlogPostTemplate({data, pageContext, children}) {\n  const {frontmatter} = data.mdx;\n  const {previous, next, post} = pageContext;\n  return React.createElement(Layout, null, React.createElement(ThemeProvider, {\n    theme: theme\n  }, React.createElement(Body, null, React.createElement(Navigation), React.createElement(BlogPost, null, React.createElement(Heading, {\n    className: \"text-center\"\n  }, frontmatter.title), React.createElement(\"p\", {\n    className: \"text-center\"\n  }, post.frontmatter.date), children, previous && React.createElement(React.Fragment, null, previous && React.createElement(Link, {\n    to: previous.fields.slug\n  }, React.createElement(\"p\", null, previous.frontmatter.title))), next && React.createElement(React.Fragment, null, next && React.createElement(Link, {\n    to: next.fields.slug\n  }, React.createElement(\"p\", null, next.frontmatter.title)))), React.createElement(Footer))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n        query PostsBySlug($slug: String) {\n            mdx(fields: { slug: { eq: $slug } }) {\n                frontmatter {\n                    title\n                }\n            }\n        }\n    `;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h1","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","BlogPost","styled","div","withConfig","displayName","componentId","BlogPostTemplate","_ref","data","pageContext","children","frontmatter","mdx","previous","next","post","Layout","ThemeProvider","theme","Body","Navigation","Heading","title","date","Link","to","fields","slug","Footer","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}